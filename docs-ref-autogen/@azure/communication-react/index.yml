### YamlMime:TSPackage
uid: '@azure/communication-react'
name: '@azure/communication-react'
summary: ''
type: package
classes:
  - '@azure/communication-react.CallError'
  - '@azure/communication-react.ChatError'
  - '@azure/communication-react.CallContext'
  - '@azure/communication-react.CallSubscriber'
  - '@azure/communication-react.DiagnosticsSubscriber'
  - '@azure/communication-react.IncomingCallSubscriber'
  - '@azure/communication-react.InternalCallContext'
  - '@azure/communication-react.ParticipantSubscriber'
  - '@azure/communication-react.ReceivedTransferSubscriber'
  - '@azure/communication-react.RecordingSubscriber'
  - '@azure/communication-react.RemoteVideoStreamSubscriber'
  - '@azure/communication-react.RequestedTransferSubscriber'
  - '@azure/communication-react.TranscriptionSubscriber'
  - '@azure/communication-react.ChatContext'
  - '@azure/communication-react.EventSubscriber'
  - '@azure/communication-react.AzureCommunicationCallAdapter'
  - '@azure/communication-react.AzureCommunicationChatAdapter'
interfaces:
  - '@azure/communication-react.ActiveError'
  - '@azure/communication-react.AdapterDisposal'
  - '@azure/communication-react.AdapterError'
  - '@azure/communication-react.AdapterPages'
  - '@azure/communication-react.AdapterState'
  - '@azure/communication-react.BaseCompositeProps'
  - '@azure/communication-react.BaseCustomStylesProps'
  - '@azure/communication-react.CallAdapter'
  - '@azure/communication-react.CallAdapterCallManagement'
  - '@azure/communication-react.CallAdapterDeviceManagement'
  - '@azure/communication-react.CallAdapterSubscribers'
  - '@azure/communication-react.CallAgentProviderProps'
  - '@azure/communication-react.CallAgentState'
  - '@azure/communication-react.CallClientProviderProps'
  - '@azure/communication-react.CallClientState'
  - '@azure/communication-react.CallCompositeProps'
  - '@azure/communication-react.CallCompositeStrings'
  - '@azure/communication-react.CallState'
  - '@azure/communication-react.CallingTheme'
  - '@azure/communication-react.CameraButtonProps'
  - '@azure/communication-react.CameraButtonStrings'
  - '@azure/communication-react.ChatAdapter'
  - '@azure/communication-react.ChatAdapterSubscribers'
  - '@azure/communication-react.ChatAdapterThreadManagement'
  - '@azure/communication-react.ChatCompositeProps'
  - '@azure/communication-react.ChatCompositeStrings'
  - '@azure/communication-react.ComponentLocale'
  - '@azure/communication-react.ComponentStrings'
  - '@azure/communication-react.CompositeLocale'
  - '@azure/communication-react.CompositeStrings'
  - '@azure/communication-react.ControlBarButtonProps'
  - '@azure/communication-react.ControlBarButtonStrings'
  - '@azure/communication-react.ControlBarProps'
  - '@azure/communication-react.DiagnosticsCallFeatureState'
  - '@azure/communication-react.EndCallButtonProps'
  - '@azure/communication-react.EndCallButtonStrings'
  - '@azure/communication-react.ErrorBarProps'
  - '@azure/communication-react.ErrorBarStrings'
  - '@azure/communication-react.FluentThemeProviderProps'
  - '@azure/communication-react.GridLayoutProps'
  - '@azure/communication-react.IdentifierProviderProps'
  - '@azure/communication-react.Identifiers'
  - '@azure/communication-react.IncomingCallState'
  - '@azure/communication-react.JumpToNewMessageButtonProps'
  - '@azure/communication-react.LocalVideoStreamState'
  - '@azure/communication-react.MediaDiagnosticsState'
  - '@azure/communication-react.MeetingAdapter'
  - '@azure/communication-react.MeetingAdapterClientState'
  - '@azure/communication-react.MeetingAdapterMeetingManagement'
  - '@azure/communication-react.MeetingAdapterState'
  - '@azure/communication-react.MeetingAdapterSubscriptions'
  - '@azure/communication-react.MeetingAdapterUiState'
  - '@azure/communication-react.MeetingParticipant'
  - '@azure/communication-react.MeetingState'
  - '@azure/communication-react.MessageStatusIndicatorProps'
  - '@azure/communication-react.MessageStatusIndicatorStrings'
  - '@azure/communication-react.MessageThreadStrings'
  - '@azure/communication-react.MessageThreadStylesProps'
  - '@azure/communication-react.MicrophoneButtonProps'
  - '@azure/communication-react.MicrophoneButtonStrings'
  - '@azure/communication-react.NetworkDiagnosticsState'
  - '@azure/communication-react.OptionsButtonProps'
  - '@azure/communication-react.OptionsButtonStrings'
  - '@azure/communication-react.OptionsDevice'
  - '@azure/communication-react.ParticipantItemProps'
  - '@azure/communication-react.ParticipantItemStrings'
  - '@azure/communication-react.ParticipantItemStylesProps'
  - '@azure/communication-react.ParticipantsButtonProps'
  - '@azure/communication-react.ParticipantsButtonStrings'
  - '@azure/communication-react.ParticipantsButtonStylesProps'
  - '@azure/communication-react.RecordingCallFeature'
  - '@azure/communication-react.RemoteParticipantState'
  - '@azure/communication-react.RemoteVideoStreamState'
  - '@azure/communication-react.ScreenShareButtonProps'
  - '@azure/communication-react.ScreenShareButtonStrings'
  - '@azure/communication-react.SendBoxProps'
  - '@azure/communication-react.SendBoxStrings'
  - '@azure/communication-react.SendBoxStylesProps'
  - '@azure/communication-react.StatefulCallClient'
  - '@azure/communication-react.StatefulChatClient'
  - '@azure/communication-react.StatefulDeviceManager'
  - '@azure/communication-react.StreamMediaProps'
  - '@azure/communication-react.TranscriptionCallFeature'
  - '@azure/communication-react.Transfer'
  - '@azure/communication-react.TransferCallFeature'
  - '@azure/communication-react.TransferRequest'
  - '@azure/communication-react.TypingIndicatorProps'
  - '@azure/communication-react.TypingIndicatorStrings'
  - '@azure/communication-react.TypingIndicatorStylesProps'
  - '@azure/communication-react.VideoGalleryProps'
  - '@azure/communication-react.VideoGalleryRemoteParticipant'
  - '@azure/communication-react.VideoGalleryStream'
  - '@azure/communication-react.VideoStreamOptions'
  - '@azure/communication-react.VideoStreamRendererViewState'
  - '@azure/communication-react.VideoTileProps'
  - '@azure/communication-react.VideoTileStylesProps'
  - '@azure/communication-react.DeclarativeCall'
  - '@azure/communication-react.CallIdRef'
  - '@azure/communication-react.LocalRenderInfo'
  - '@azure/communication-react.RemoteRenderInfo'
  - '@azure/communication-react.RenderInfo'
  - '@azure/communication-react.DeclarativeTransferCallFeature'
  - '@azure/communication-react.StatefulChatClientWithPrivateProps'
  - '@azure/communication-react.InputBoxStylesProps'
  - '@azure/communication-react.IControlBarStyles'
  - '@azure/communication-react.IObjectMap'
  - '@azure/communication-react.CallInternalProps'
  - '@azure/communication-react.CallScreenProps'
  - '@azure/communication-react.ConfigurationScreenProps'
  - '@azure/communication-react.ErrorProps'
  - '@azure/communication-react.LobbyProps'
  - '@azure/communication-react.LobbyCallControlBarProps'
  - '@azure/communication-react.LocalDeviceSettingsType'
  - '@azure/communication-react.MediaGalleryProps'
  - '@azure/communication-react.ScreenSharePopupProps'
  - '@azure/communication-react.StartCallButtonProps'
  - '@azure/communication-react.MeetingCallControlBarProps'
  - '@azure/communication-react.AvatarPersonaProps'
  - '@azure/communication-react.PermissionsBannerProps'
typeAliases:
  - '@azure/communication-react.CallProviderProps'
  - '@azure/communication-react.AdapterErrors'
  - '@azure/communication-react.AllKeys'
  - '@azure/communication-react.AreEqual'
  - '@azure/communication-react.AreParamEqual'
  - '@azure/communication-react.AreTypeEqual'
  - '@azure/communication-react.AvatarPersonaData'
  - '@azure/communication-react.AvatarPersonaDataCallback'
  - '@azure/communication-react.AzureCommunicationCallAdapterArgs'
  - '@azure/communication-react.AzureCommunicationChatAdapterArgs'
  - '@azure/communication-react.ButtonCustomStylesProps'
  - '@azure/communication-react.CallAdapterClientState'
  - '@azure/communication-react.CallAdapterState'
  - '@azure/communication-react.CallAdapterUiState'
  - '@azure/communication-react.CallCompositeIcons'
  - '@azure/communication-react.CallCompositePage'
  - '@azure/communication-react.CallCompositeVisualElements'
  - '@azure/communication-react.CallEndedListener'
  - '@azure/communication-react.CallErrorTarget'
  - '@azure/communication-react.CallErrors'
  - '@azure/communication-react.CallIdChangedListener'
  - '@azure/communication-react.CallParticipant'
  - '@azure/communication-react.CallStateModifier'
  - '@azure/communication-react.CallingBaseSelectorProps'
  - '@azure/communication-react.CallingHandlers'
  - '@azure/communication-react.CallingReturnProps'
  - '@azure/communication-react.ChatAdapterState'
  - '@azure/communication-react.ChatAdapterUiState'
  - '@azure/communication-react.ChatBaseSelectorProps'
  - '@azure/communication-react.ChatClientProviderProps'
  - '@azure/communication-react.ChatClientState'
  - '@azure/communication-react.ChatCompositeClientState'
  - '@azure/communication-react.ChatCompositeIcons'
  - '@azure/communication-react.ChatCompositeVisualElements'
  - '@azure/communication-react.ChatErrorTarget'
  - '@azure/communication-react.ChatErrors'
  - '@azure/communication-react.ChatHandlers'
  - '@azure/communication-react.ChatMessage'
  - '@azure/communication-react.ChatMessagePayload'
  - '@azure/communication-react.ChatMessageWithStatus'
  - '@azure/communication-react.ChatReturnProps'
  - '@azure/communication-react.ChatStateModifier'
  - '@azure/communication-react.ChatThreadClientProviderProps'
  - '@azure/communication-react.ChatThreadClientState'
  - '@azure/communication-react.ChatThreadProperties'
  - '@azure/communication-react.ClientState'
  - '@azure/communication-react.Common'
  - '@azure/communication-react.CommonProperties'
  - '@azure/communication-react.CommunicationParticipant'
  - '@azure/communication-react.ComponentIcons'
  - '@azure/communication-react.CompositeIcons'
  - '@azure/communication-react.ControlBarLayoutType'
  - '@azure/communication-react.CustomAvatarOptions'
  - '@azure/communication-react.CustomMessage'
  - '@azure/communication-react.CustomMessagePayload'
  - '@azure/communication-react.DefaultMessageRendererType'
  - '@azure/communication-react.DeviceManagerState'
  - '@azure/communication-react.DisplayNameChangedListener'
  - '@azure/communication-react.ErrorType'
  - '@azure/communication-react.GetCallingSelector'
  - '@azure/communication-react.GetChatSelector'
  - '@azure/communication-react.GridLayoutType'
  - '@azure/communication-react.IncomingCallListener'
  - '@azure/communication-react.InputBoxButtonProps'
  - '@azure/communication-react.IsMuteChangedListener'
  - '@azure/communication-react.IsScreenSharingOnChangedListener'
  - '@azure/communication-react.IsSpeakingChangedListener'
  - '@azure/communication-react.LocalizationProviderProps'
  - '@azure/communication-react.MeetingCompositePage'
  - '@azure/communication-react.MeetingCompositeProps'
  - '@azure/communication-react.MeetingEndReason'
  - '@azure/communication-react.MeetingErrors'
  - '@azure/communication-react.MeetingEvent'
  - '@azure/communication-react.Message'
  - '@azure/communication-react.MessageAttachedStatus'
  - '@azure/communication-react.MessageContentType'
  - '@azure/communication-react.MessageProps'
  - '@azure/communication-react.MessageReadListener'
  - '@azure/communication-react.MessageReceivedListener'
  - '@azure/communication-react.MessageSentListener'
  - '@azure/communication-react.MessageStatus'
  - '@azure/communication-react.MessageThreadProps'
  - '@azure/communication-react.MessageTypes'
  - '@azure/communication-react.OmitNever'
  - '@azure/communication-react.OnRenderAvatarCallback'
  - '@azure/communication-react.ParticipantJoinedListener'
  - '@azure/communication-react.ParticipantLeftListener'
  - '@azure/communication-react.ParticipantListProps'
  - '@azure/communication-react.ParticipantsAddedListener'
  - '@azure/communication-react.ParticipantsRemovedListener'
  - '@azure/communication-react.Selector'
  - '@azure/communication-react.StatefulCallClientArgs'
  - '@azure/communication-react.StatefulCallClientOptions'
  - '@azure/communication-react.StatefulChatClientArgs'
  - '@azure/communication-react.StatefulChatClientOptions'
  - '@azure/communication-react.SystemMessage'
  - '@azure/communication-react.SystemMessagePayload'
  - '@azure/communication-react.SystemMessagePayloadAllProps'
  - '@azure/communication-react.SystemMessageType'
  - '@azure/communication-react.TopicChangedListener'
  - '@azure/communication-react.VideoGalleryLocalParticipant'
  - '@azure/communication-react.VideoGalleryParticipant'
  - '@azure/communication-react.CallbackType'
  - '@azure/communication-react.FunctionWithKey'
  - '@azure/communication-react.GetSelector'
  - '@azure/communication-react.CallAgentContextType'
  - '@azure/communication-react.CallClientContextType'
  - '@azure/communication-react.CallContextType'
  - '@azure/communication-react.RenderStatus'
  - '@azure/communication-react.IteratorCreatorFn'
  - '@azure/communication-react.ChatMessageProps'
  - '@azure/communication-react.EditBoxProps'
  - '@azure/communication-react.InputBoxComponentProps'
  - '@azure/communication-react.SystemMessageIconTypes'
  - '@azure/communication-react.SystemMessageProps'
  - '@azure/communication-react.MessageType'
  - '@azure/communication-react.CallControlsProps'
  - '@azure/communication-react.ComplianceBannerProps'
  - '@azure/communication-react.ScreenShareProps'
  - '@azure/communication-react.CallEvent'
  - '@azure/communication-react.ParticipantEvent'
  - '@azure/communication-react.HeaderProps'
  - '@azure/communication-react.ChatScreenProps'
  - '@azure/communication-react.ChatEvent'
  - '@azure/communication-react.ChatProviderProps'
functions:
  - name: >-
      convertFromSDKToDeclarativeVideoStreamRendererView(VideoStreamRendererView)
    uid: >-
      @azure/communication-react.convertFromSDKToDeclarativeVideoStreamRendererView
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function convertFromSDKToDeclarativeVideoStreamRendererView(view:
        VideoStreamRendererView)
      parameters:
        - id: view
          type: VideoStreamRendererView
          description: ''
      return:
        type: DeclarativeVideoStreamRendererView
        description: ''
  - name: convertSdkCallToDeclarativeCall(SdkCall)
    uid: '@azure/communication-react.convertSdkCallToDeclarativeCall'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function convertSdkCallToDeclarativeCall(call: SdkCall)'
      parameters:
        - id: call
          type: SdkCall
          description: ''
      return:
        type: <xref uid="@azure/communication-react.CallState" />
        description: ''
  - name: convertSdkIncomingCallToDeclarativeIncomingCall(SdkIncomingCall)
    uid: '@azure/communication-react.convertSdkIncomingCallToDeclarativeIncomingCall'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function convertSdkIncomingCallToDeclarativeIncomingCall(call:
        SdkIncomingCall)
      parameters:
        - id: call
          type: SdkIncomingCall
          description: ''
      return:
        type: DeclarativeIncomingCall
        description: ''
  - name: convertSdkLocalStreamToDeclarativeLocalStream(SdkLocalVideoStream)
    uid: '@azure/communication-react.convertSdkLocalStreamToDeclarativeLocalStream'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function convertSdkLocalStreamToDeclarativeLocalStream(stream:
        SdkLocalVideoStream)
      parameters:
        - id: stream
          type: SdkLocalVideoStream
          description: ''
      return:
        type: DeclarativeLocalVideoStream
        description: ''
  - name: convertSdkParticipantToDeclarativeParticipant(SdkRemoteParticipant)
    uid: '@azure/communication-react.convertSdkParticipantToDeclarativeParticipant'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function convertSdkParticipantToDeclarativeParticipant(participant:
        SdkRemoteParticipant)
      parameters:
        - id: participant
          type: SdkRemoteParticipant
          description: ''
      return:
        type: DeclarativeRemoteParticipant
        description: ''
  - name: convertSdkRemoteStreamToDeclarativeRemoteStream(SdkRemoteVideoStream)
    uid: '@azure/communication-react.convertSdkRemoteStreamToDeclarativeRemoteStream'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function convertSdkRemoteStreamToDeclarativeRemoteStream(stream:
        SdkRemoteVideoStream)
      parameters:
        - id: stream
          type: SdkRemoteVideoStream
          description: ''
      return:
        type: DeclarativeRemoteVideoStream
        description: ''
  - name: >-
      convertSdkTransferRequestedToDeclarativeTransferRequested(TransferRequestedEventArgs)
    uid: >-
      @azure/communication-react.convertSdkTransferRequestedToDeclarativeTransferRequested
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        convertSdkTransferRequestedToDeclarativeTransferRequested(transferRequested:
        TransferRequestedEventArgs)
      parameters:
        - id: transferRequested
          type: TransferRequestedEventArgs
          description: ''
      return:
        type: <xref uid="@azure/communication-react.TransferRequest" />
        description: ''
  - name: >-
      convertSdkTransferToDeclarativeTransfer(Transfer,
      CommunicationUserIdentifier | PhoneNumberIdentifier, number)
    uid: '@azure/communication-react.convertSdkTransferToDeclarativeTransfer'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function convertSdkTransferToDeclarativeTransfer(transfer: Transfer,
        targetParticipant: CommunicationUserIdentifier | PhoneNumberIdentifier,
        transferId: number)
      parameters:
        - id: transfer
          type: Transfer
          description: ''
        - id: targetParticipant
          type: CommunicationUserIdentifier | PhoneNumberIdentifier
          description: ''
        - id: transferId
          type: number
          description: ''
      return:
        type: DeclarativeTransfer
        description: ''
  - name: >-
      createView(CallContext, InternalCallContext, string | undefined,
      CommunicationIdentifierKind | string | undefined, LocalVideoStreamState |
      RemoteVideoStreamState, CreateViewOptions)
    uid: '@azure/communication-react.createView'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createView(context: CallContext, internalContext:
        InternalCallContext, callId: string | undefined, participantId:
        CommunicationIdentifierKind | string | undefined, stream:
        LocalVideoStreamState | RemoteVideoStreamState, options?:
        CreateViewOptions)
      parameters:
        - id: context
          type: <xref uid="@azure/communication-react.CallContext" />
          description: ''
        - id: internalContext
          type: <xref uid="@azure/communication-react.InternalCallContext" />
          description: ''
        - id: callId
          type: string | undefined
          description: ''
        - id: participantId
          type: CommunicationIdentifierKind | string | undefined
          description: ''
        - id: stream
          type: >-
            <xref uid="@azure/communication-react.LocalVideoStreamState" /> |
            <xref uid="@azure/communication-react.RemoteVideoStreamState" />
          description: ''
        - id: options
          type: CreateViewOptions
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'disposeAllViews(CallContext, InternalCallContext)'
    uid: '@azure/communication-react.disposeAllViews'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disposeAllViews(context: CallContext, internalContext:
        InternalCallContext)
      parameters:
        - id: context
          type: <xref uid="@azure/communication-react.CallContext" />
          description: ''
        - id: internalContext
          type: <xref uid="@azure/communication-react.InternalCallContext" />
          description: ''
  - name: 'disposeAllViewsFromCall(CallContext, InternalCallContext, string)'
    uid: '@azure/communication-react.disposeAllViewsFromCall'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disposeAllViewsFromCall(context: CallContext, internalContext:
        InternalCallContext, callId: string)
      parameters:
        - id: context
          type: <xref uid="@azure/communication-react.CallContext" />
          description: ''
        - id: internalContext
          type: <xref uid="@azure/communication-react.InternalCallContext" />
          description: ''
        - id: callId
          type: string
          description: ''
  - name: >-
      disposeView(CallContext, InternalCallContext, string | undefined,
      CommunicationIdentifierKind | string | undefined, LocalVideoStreamState |
      RemoteVideoStreamState)
    uid: '@azure/communication-react.disposeView'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disposeView(context: CallContext, internalContext:
        InternalCallContext, callId: string | undefined, participantId:
        CommunicationIdentifierKind | string | undefined, stream:
        LocalVideoStreamState | RemoteVideoStreamState)
      parameters:
        - id: context
          type: <xref uid="@azure/communication-react.CallContext" />
          description: ''
        - id: internalContext
          type: <xref uid="@azure/communication-react.InternalCallContext" />
          description: ''
        - id: callId
          type: string | undefined
          description: ''
        - id: participantId
          type: CommunicationIdentifierKind | string | undefined
          description: ''
        - id: stream
          type: >-
            <xref uid="@azure/communication-react.LocalVideoStreamState" /> |
            <xref uid="@azure/communication-react.RemoteVideoStreamState" />
          description: ''
  - name: Error(ErrorProps)
    uid: '@azure/communication-react.Error'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function Error(props: ErrorProps)'
      parameters:
        - id: props
          type: <xref uid="@azure/communication-react.ErrorProps" />
          description: ''
      return:
        type: Element
        description: ''
