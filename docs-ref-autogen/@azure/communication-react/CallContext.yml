### YamlMime:TSType
name: CallContext
uid: '@azure/communication-react.CallContext'
package: '@azure/communication-react'
summary: ''
fullName: CallContext
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'CallContext(CommunicationUserKind, number)'
    uid: '@azure/communication-react.CallContext.constructor'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new CallContext(userId: CommunicationUserKind, maxListeners?: number)'
      parameters:
        - id: userId
          type: CommunicationUserKind
          description: ''
        - id: maxListeners
          type: number
          description: ''
methods:
  - name: batch(() => void)
    uid: '@azure/communication-react.CallContext.batch'
    package: '@azure/communication-react'
    summary: >
      Batch updates to minimize `stateChanged` events across related operations.

      - A maximum of one `stateChanged` event is emitted, at the end of the
      operations.

      - No `stateChanged` event is emitted if the state did not change through
      the operations.

      - In case of an exception, state is reset to the prior value and no
      `stateChanged` event is emitted.


      All operations finished in this batch should be synchronous.

      This function is not reentrant -- do not call batch() from within another
      batch().
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function batch(operations: () => void)'
      parameters:
        - id: operations
          type: () =&gt; void
          description: ''
  - name: clearCallRelatedState()
    uid: '@azure/communication-react.CallContext.clearCallRelatedState'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function clearCallRelatedState()
  - name: deleteDeviceManagerUnparentedView(LocalVideoStreamState)
    uid: '@azure/communication-react.CallContext.deleteDeviceManagerUnparentedView'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDeviceManagerUnparentedView(localVideoStream:
        LocalVideoStreamState)
      parameters:
        - id: localVideoStream
          type: <xref uid="@azure/communication-react.LocalVideoStreamState" />
          description: ''
  - name: getAndIncrementAtomicId()
    uid: '@azure/communication-react.CallContext.getAndIncrementAtomicId'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getAndIncrementAtomicId()
      return:
        type: number
        description: ''
  - name: getState()
    uid: '@azure/communication-react.CallContext.getState'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getState()
      return:
        type: <xref uid="@azure/communication-react.CallClientState" />
        description: ''
  - name: modifyState(CallStateModifier)
    uid: '@azure/communication-react.CallContext.modifyState'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function modifyState(modifier: CallStateModifier)'
      parameters:
        - id: modifier
          type: <xref uid="@azure/communication-react.CallStateModifier" />
          description: ''
  - name: 'offStateChange((state: CallClientState) => void)'
    uid: '@azure/communication-react.CallContext.offStateChange'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function offStateChange(handler: (state: CallClientState) => void)'
      parameters:
        - id: handler
          type: '(state: CallClientState) =&gt; void'
          description: ''
  - name: 'onStateChange((state: CallClientState) => void)'
    uid: '@azure/communication-react.CallContext.onStateChange'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onStateChange(handler: (state: CallClientState) => void)'
      parameters:
        - id: handler
          type: '(state: CallClientState) =&gt; void'
          description: ''
  - name: removeCall(string)
    uid: '@azure/communication-react.CallContext.removeCall'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeCall(callId: string)'
      parameters:
        - id: callId
          type: string
          description: ''
  - name: removeIncomingCall(string)
    uid: '@azure/communication-react.CallContext.removeIncomingCall'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeIncomingCall(callId: string)'
      parameters:
        - id: callId
          type: string
          description: ''
  - name: setCall(CallState)
    uid: '@azure/communication-react.CallContext.setCall'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setCall(call: CallState)'
      parameters:
        - id: call
          type: <xref uid="@azure/communication-react.CallState" />
          description: ''
  - name: setCallAgent(CallAgentState)
    uid: '@azure/communication-react.CallContext.setCallAgent'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setCallAgent(callAgent: CallAgentState)'
      parameters:
        - id: callAgent
          type: <xref uid="@azure/communication-react.CallAgentState" />
          description: ''
  - name: 'setCallDominantSpeakers(string, DominantSpeakersInfo)'
    uid: '@azure/communication-react.CallContext.setCallDominantSpeakers'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallDominantSpeakers(callId: string, dominantSpeakers:
        DominantSpeakersInfo)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: dominantSpeakers
          type: DominantSpeakersInfo
          description: ''
  - name: 'setCallEnded(string, CallEndReason | undefined)'
    uid: '@azure/communication-react.CallContext.setCallEnded'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallEnded(callId: string, callEndReason: CallEndReason |
        undefined)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: callEndReason
          type: CallEndReason | undefined
          description: ''
  - name: 'setCallId(string, string)'
    uid: '@azure/communication-react.CallContext.setCallId'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setCallId(newCallId: string, oldCallId: string)'
      parameters:
        - id: newCallId
          type: string
          description: ''
        - id: oldCallId
          type: string
          description: ''
  - name: 'setCallIsMicrophoneMuted(string, boolean)'
    uid: '@azure/communication-react.CallContext.setCallIsMicrophoneMuted'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallIsMicrophoneMuted(callId: string, isMicrophoneMuted:
        boolean)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: isMicrophoneMuted
          type: boolean
          description: ''
  - name: 'setCallIsScreenSharingOn(string, boolean)'
    uid: '@azure/communication-react.CallContext.setCallIsScreenSharingOn'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallIsScreenSharingOn(callId: string, isScreenSharingOn:
        boolean)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: isScreenSharingOn
          type: boolean
          description: ''
  - name: 'setCallLocalVideoStream(string, LocalVideoStreamState[])'
    uid: '@azure/communication-react.CallContext.setCallLocalVideoStream'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallLocalVideoStream(callId: string, streams:
        LocalVideoStreamState[])
      parameters:
        - id: callId
          type: string
          description: ''
        - id: streams
          type: '<xref uid="@azure/communication-react.LocalVideoStreamState" />[]'
          description: ''
  - name: 'setCallReceivedTransferRequest(string, TransferRequest)'
    uid: '@azure/communication-react.CallContext.setCallReceivedTransferRequest'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallReceivedTransferRequest(callId: string, transfer:
        TransferRequest)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: transfer
          type: <xref uid="@azure/communication-react.TransferRequest" />
          description: ''
  - name: 'setCallRecordingActive(string, boolean)'
    uid: '@azure/communication-react.CallContext.setCallRecordingActive'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallRecordingActive(callId: string, isRecordingActive:
        boolean)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: isRecordingActive
          type: boolean
          description: ''
  - name: 'setCallRemoteParticipants(string, RemoteParticipantState[], string[])'
    uid: '@azure/communication-react.CallContext.setCallRemoteParticipants'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallRemoteParticipants(callId: string, addRemoteParticipant:
        RemoteParticipantState[], removeRemoteParticipant: string[])
      parameters:
        - id: callId
          type: string
          description: ''
        - id: addRemoteParticipant
          type: '<xref uid="@azure/communication-react.RemoteParticipantState" />[]'
          description: ''
        - id: removeRemoteParticipant
          type: 'string[]'
          description: ''
  - name: 'setCallRemoteParticipantsEnded(string, RemoteParticipantState[], string[])'
    uid: '@azure/communication-react.CallContext.setCallRemoteParticipantsEnded'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallRemoteParticipantsEnded(callId: string,
        addRemoteParticipant: RemoteParticipantState[], removeRemoteParticipant:
        string[])
      parameters:
        - id: callId
          type: string
          description: ''
        - id: addRemoteParticipant
          type: '<xref uid="@azure/communication-react.RemoteParticipantState" />[]'
          description: ''
        - id: removeRemoteParticipant
          type: 'string[]'
          description: ''
  - name: 'setCallRequestedTransfer(string, Transfer)'
    uid: '@azure/communication-react.CallContext.setCallRequestedTransfer'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setCallRequestedTransfer(callId: string, transfer: Transfer)'
      parameters:
        - id: callId
          type: string
          description: ''
        - id: transfer
          type: <xref uid="@azure/communication-react.Transfer" />
          description: ''
  - name: >-
      setCallRequestedTransferState(string, number, TransferState,
      TransferErrorCode)
    uid: '@azure/communication-react.CallContext.setCallRequestedTransferState'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallRequestedTransferState(callId: string, transferId:
        number, state: TransferState, error?: TransferErrorCode)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: transferId
          type: number
          description: ''
        - id: state
          type: TransferState
          description: ''
        - id: error
          type: TransferErrorCode
          description: ''
  - name: 'setCallScreenShareParticipant(string, string | undefined)'
    uid: '@azure/communication-react.CallContext.setCallScreenShareParticipant'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallScreenShareParticipant(callId: string, participantKey:
        string | undefined)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: participantKey
          type: string | undefined
          description: ''
  - name: 'setCallState(string, CallStatus)'
    uid: '@azure/communication-react.CallContext.setCallState'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setCallState(callId: string, state: CallStatus)'
      parameters:
        - id: callId
          type: string
          description: ''
        - id: state
          type: CallStatus
          description: ''
  - name: 'setCallTranscriptionActive(string, boolean)'
    uid: '@azure/communication-react.CallContext.setCallTranscriptionActive'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCallTranscriptionActive(callId: string,
        isTranscriptionActive: boolean)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: isTranscriptionActive
          type: boolean
          description: ''
  - name: 'setDeviceManagerCameras(VideoDeviceInfo[])'
    uid: '@azure/communication-react.CallContext.setDeviceManagerCameras'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setDeviceManagerCameras(cameras: VideoDeviceInfo[])'
      parameters:
        - id: cameras
          type: 'VideoDeviceInfo[]'
          description: ''
  - name: setDeviceManagerDeviceAccess(DeviceAccess)
    uid: '@azure/communication-react.CallContext.setDeviceManagerDeviceAccess'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setDeviceManagerDeviceAccess(deviceAccess: DeviceAccess)'
      parameters:
        - id: deviceAccess
          type: DeviceAccess
          description: ''
  - name: setDeviceManagerIsSpeakerSelectionAvailable(boolean)
    uid: >-
      @azure/communication-react.CallContext.setDeviceManagerIsSpeakerSelectionAvailable
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function
        setDeviceManagerIsSpeakerSelectionAvailable(isSpeakerSelectionAvailable:
        boolean)
      parameters:
        - id: isSpeakerSelectionAvailable
          type: boolean
          description: ''
  - name: 'setDeviceManagerMicrophones(AudioDeviceInfo[])'
    uid: '@azure/communication-react.CallContext.setDeviceManagerMicrophones'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setDeviceManagerMicrophones(microphones: AudioDeviceInfo[])'
      parameters:
        - id: microphones
          type: 'AudioDeviceInfo[]'
          description: ''
  - name: setDeviceManagerSelectedCamera(VideoDeviceInfo)
    uid: '@azure/communication-react.CallContext.setDeviceManagerSelectedCamera'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setDeviceManagerSelectedCamera(selectedCamera?:
        VideoDeviceInfo)
      parameters:
        - id: selectedCamera
          type: VideoDeviceInfo
          description: ''
  - name: setDeviceManagerSelectedMicrophone(AudioDeviceInfo)
    uid: '@azure/communication-react.CallContext.setDeviceManagerSelectedMicrophone'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setDeviceManagerSelectedMicrophone(selectedMicrophone?:
        AudioDeviceInfo)
      parameters:
        - id: selectedMicrophone
          type: AudioDeviceInfo
          description: ''
  - name: setDeviceManagerSelectedSpeaker(AudioDeviceInfo)
    uid: '@azure/communication-react.CallContext.setDeviceManagerSelectedSpeaker'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setDeviceManagerSelectedSpeaker(selectedSpeaker?:
        AudioDeviceInfo)
      parameters:
        - id: selectedSpeaker
          type: AudioDeviceInfo
          description: ''
  - name: 'setDeviceManagerSpeakers(AudioDeviceInfo[])'
    uid: '@azure/communication-react.CallContext.setDeviceManagerSpeakers'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setDeviceManagerSpeakers(speakers: AudioDeviceInfo[])'
      parameters:
        - id: speakers
          type: 'AudioDeviceInfo[]'
          description: ''
  - name: >-
      setDeviceManagerUnparentedView(LocalVideoStreamState,
      VideoStreamRendererViewState | undefined)
    uid: '@azure/communication-react.CallContext.setDeviceManagerUnparentedView'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setDeviceManagerUnparentedView(localVideoStream:
        LocalVideoStreamState, view: VideoStreamRendererViewState | undefined)
      parameters:
        - id: localVideoStream
          type: <xref uid="@azure/communication-react.LocalVideoStreamState" />
          description: ''
        - id: view
          type: >-
            <xref uid="@azure/communication-react.VideoStreamRendererViewState"
            /> | undefined
          description: ''
  - name: setIncomingCall(IncomingCallState)
    uid: '@azure/communication-react.CallContext.setIncomingCall'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setIncomingCall(call: IncomingCallState)'
      parameters:
        - id: call
          type: <xref uid="@azure/communication-react.IncomingCallState" />
          description: ''
  - name: 'setIncomingCallEnded(string, CallEndReason | undefined)'
    uid: '@azure/communication-react.CallContext.setIncomingCallEnded'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setIncomingCallEnded(callId: string, callEndReason:
        CallEndReason | undefined)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: callEndReason
          type: CallEndReason | undefined
          description: ''
  - name: >-
      setLocalVideoStreamRendererView(string, VideoStreamRendererViewState |
      undefined)
    uid: '@azure/communication-react.CallContext.setLocalVideoStreamRendererView'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setLocalVideoStreamRendererView(callId: string, view:
        VideoStreamRendererViewState | undefined)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: view
          type: >-
            <xref uid="@azure/communication-react.VideoStreamRendererViewState"
            /> | undefined
          description: ''
  - name: 'setParticipantDisplayName(string, string, string)'
    uid: '@azure/communication-react.CallContext.setParticipantDisplayName'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setParticipantDisplayName(callId: string, participantKey:
        string, displayName: string)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: participantKey
          type: string
          description: ''
        - id: displayName
          type: string
          description: ''
  - name: 'setParticipantIsMuted(string, string, boolean)'
    uid: '@azure/communication-react.CallContext.setParticipantIsMuted'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setParticipantIsMuted(callId: string, participantKey: string,
        muted: boolean)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: participantKey
          type: string
          description: ''
        - id: muted
          type: boolean
          description: ''
  - name: 'setParticipantIsSpeaking(string, string, boolean)'
    uid: '@azure/communication-react.CallContext.setParticipantIsSpeaking'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setParticipantIsSpeaking(callId: string, participantKey:
        string, isSpeaking: boolean)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: participantKey
          type: string
          description: ''
        - id: isSpeaking
          type: boolean
          description: ''
  - name: 'setParticipantState(string, string, RemoteParticipantStatus)'
    uid: '@azure/communication-react.CallContext.setParticipantState'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setParticipantState(callId: string, participantKey: string,
        state: RemoteParticipantStatus)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: participantKey
          type: string
          description: ''
        - id: state
          type: RemoteParticipantStatus
          description: ''
  - name: 'setParticipantVideoStream(string, string, RemoteVideoStreamState)'
    uid: '@azure/communication-react.CallContext.setParticipantVideoStream'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setParticipantVideoStream(callId: string, participantKey:
        string, stream: RemoteVideoStreamState)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: participantKey
          type: string
          description: ''
        - id: stream
          type: <xref uid="@azure/communication-react.RemoteVideoStreamState" />
          description: ''
  - name: 'setRemoteVideoStreamIsAvailable(string, string, number, boolean)'
    uid: '@azure/communication-react.CallContext.setRemoteVideoStreamIsAvailable'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setRemoteVideoStreamIsAvailable(callId: string, participantKey:
        string, streamId: number, isAvailable: boolean)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: participantKey
          type: string
          description: ''
        - id: streamId
          type: number
          description: ''
        - id: isAvailable
          type: boolean
          description: ''
  - name: >-
      setRemoteVideoStreamRendererView(string, string, number,
      VideoStreamRendererViewState | undefined)
    uid: '@azure/communication-react.CallContext.setRemoteVideoStreamRendererView'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setRemoteVideoStreamRendererView(callId: string,
        participantKey: string, streamId: number, view:
        VideoStreamRendererViewState | undefined)
      parameters:
        - id: callId
          type: string
          description: ''
        - id: participantKey
          type: string
          description: ''
        - id: streamId
          type: number
          description: ''
        - id: view
          type: >-
            <xref uid="@azure/communication-react.VideoStreamRendererViewState"
            /> | undefined
          description: ''
  - name: 'setRemoteVideoStreams(string, string, RemoteVideoStreamState[], number[])'
    uid: '@azure/communication-react.CallContext.setRemoteVideoStreams'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setRemoteVideoStreams(callId: string, participantKey: string,
        addRemoteVideoStream: RemoteVideoStreamState[], removeRemoteVideoStream:
        number[])
      parameters:
        - id: callId
          type: string
          description: ''
        - id: participantKey
          type: string
          description: ''
        - id: addRemoteVideoStream
          type: '<xref uid="@azure/communication-react.RemoteVideoStreamState" />[]'
          description: ''
        - id: removeRemoteVideoStream
          type: 'number[]'
          description: ''
  - name: setState(CallClientState)
    uid: '@azure/communication-react.CallContext.setState'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setState(state: CallClientState)'
      parameters:
        - id: state
          type: <xref uid="@azure/communication-react.CallClientState" />
          description: ''
  - name: >-
      withAsyncErrorTeedToState<Args>((args: Args) => Promise<R>,
      CallErrorTarget, CallErrorTarget[])
    uid: '@azure/communication-react.CallContext.withAsyncErrorTeedToState'
    package: '@azure/communication-react'
    summary: |
      Tees any errors encountered in an async function to the state.
      If the function succeeds, clears associated errors from the state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function withAsyncErrorTeedToState<Args>(action: (args: Args) =>
        Promise<R>, target: CallErrorTarget, clearTargets?: CallErrorTarget[])
      parameters:
        - id: action
          type: '(args: Args) =&gt; Promise&lt;R&gt;'
          description: Async function to execute.
        - id: target
          type: <xref uid="@azure/communication-react.CallErrorTarget" />
          description: The error target to tee error to.
        - id: clearTargets
          type: '<xref uid="@azure/communication-react.CallErrorTarget" />[]'
          description: >-
            The error targets to clear errors for if the function succeeds. By
            default, clears errors for `target`.
      return:
        type: '(args: Args) =&gt; Promise&lt;R&gt;'
        description: Result of calling `f`. Also re-raises any exceptions thrown from `f`.
  - name: >-
      withErrorTeedToState<Args>((args: Args) => R, CallErrorTarget,
      CallErrorTarget[])
    uid: '@azure/communication-react.CallContext.withErrorTeedToState'
    package: '@azure/communication-react'
    summary: |
      Tees any errors encountered in an function to the state.
      If the function succeeds, clears associated errors from the state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function withErrorTeedToState<Args>(action: (args: Args) => R, target:
        CallErrorTarget, clearTargets?: CallErrorTarget[])
      parameters:
        - id: action
          type: '(args: Args) =&gt; R'
          description: Function to execute.
        - id: target
          type: <xref uid="@azure/communication-react.CallErrorTarget" />
          description: The error target to tee error to.
        - id: clearTargets
          type: '<xref uid="@azure/communication-react.CallErrorTarget" />[]'
          description: >-
            The error targets to clear errors for if the function succeeds. By
            default, clears errors for `target`.
      return:
        type: '(args: Args) =&gt; R'
        description: Result of calling `f`. Also re-raises any exceptions thrown from `f`.
