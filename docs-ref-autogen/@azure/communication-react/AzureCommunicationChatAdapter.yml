### YamlMime:TSType
name: AzureCommunicationChatAdapter
uid: '@azure/communication-react.AzureCommunicationChatAdapter'
package: '@azure/communication-react'
summary: ''
fullName: AzureCommunicationChatAdapter
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'AzureCommunicationChatAdapter(StatefulChatClient, ChatThreadClient)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.constructor'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new AzureCommunicationChatAdapter(chatClient: StatefulChatClient,
        chatThreadClient: ChatThreadClient)
      parameters:
        - id: chatClient
          type: <xref uid="@azure/communication-react.StatefulChatClient" />
          description: ''
        - id: chatThreadClient
          type: ChatThreadClient
          description: ''
methods:
  - name: deleteMessage(string)
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.deleteMessage'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteMessage(messageId: string)'
      parameters:
        - id: messageId
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: dispose()
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.dispose'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function dispose()
  - name: fetchInitialData()
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.fetchInitialData'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function fetchInitialData()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getState()
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.getState'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getState()
      return:
        type: <xref uid="@azure/communication-react.ChatAdapterState" />
        description: ''
  - name: loadPreviousChatMessages(number)
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.loadPreviousChatMessages
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function loadPreviousChatMessages(messagesToLoad: number)'
      parameters:
        - id: messagesToLoad
          type: number
          description: ''
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: 'off("error", (e: AdapterError) => void)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "error", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
  - name: 'off("messageRead", MessageReadListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
  - name: 'off("messageReceived", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "messageReceived", listener:
        MessageReceivedListener)
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'off("messageSent", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'off("participantsAdded", ParticipantsAddedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"participantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
  - name: 'off("participantsRemoved", ParticipantsRemovedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"participantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
  - name: 'off("topicChanged", TopicChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.off_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "topicChanged", listener: TopicChangedListener)'
      parameters:
        - id: event
          type: '"topicChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.TopicChangedListener" />
          description: ''
  - name: 'offStateChange((state: ChatAdapterState) => void)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.offStateChange'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function offStateChange(handler: (state: ChatAdapterState) => void)'
      parameters:
        - id: handler
          type: '(state: ChatAdapterState) =&gt; void'
          description: ''
  - name: 'on("error", (e: AdapterError) => void)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "error", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
  - name: 'on("messageRead", MessageReadListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
  - name: 'on("messageReceived", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageReceived", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'on("messageSent", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'on("participantsAdded", ParticipantsAddedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"participantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
  - name: 'on("participantsRemoved", ParticipantsRemovedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"participantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
  - name: 'on("topicChanged", TopicChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.on_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "topicChanged", listener: TopicChangedListener)'
      parameters:
        - id: event
          type: '"topicChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.TopicChangedListener" />
          description: ''
  - name: 'onStateChange((state: ChatAdapterState) => void)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.onStateChange'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onStateChange(handler: (state: ChatAdapterState) => void)'
      parameters:
        - id: handler
          type: '(state: ChatAdapterState) =&gt; void'
          description: ''
  - name: removeParticipant(string)
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.removeParticipant'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeParticipant(userId: string)'
      parameters:
        - id: userId
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: sendMessage(string)
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.sendMessage'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendMessage(content: string)'
      parameters:
        - id: content
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: sendReadReceipt(string)
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.sendReadReceipt'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendReadReceipt(chatMessageId: string)'
      parameters:
        - id: chatMessageId
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: sendTypingIndicator()
    uid: >-
      @azure/communication-react.AzureCommunicationChatAdapter.sendTypingIndicator
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function sendTypingIndicator()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: setTopic(string)
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.setTopic'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setTopic(topicName: string)'
      parameters:
        - id: topicName
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'updateMessage(string, string)'
    uid: '@azure/communication-react.AzureCommunicationChatAdapter.updateMessage'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function updateMessage(messageId: string, content: string)'
      parameters:
        - id: messageId
          type: string
          description: ''
        - id: content
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
