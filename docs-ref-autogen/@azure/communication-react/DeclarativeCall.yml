### YamlMime:TSType
name: DeclarativeCall
uid: '@azure/communication-react.DeclarativeCall'
package: '@azure/communication-react'
summary: ''
fullName: DeclarativeCall
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: callEndReason
    uid: '@azure/communication-react.DeclarativeCall.callEndReason'
    package: '@azure/communication-react'
    summary: Containing code/subCode indicating how this call ended.
    fullName: callEndReason
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'callEndReason?: CallEndReason'
      return:
        type: CallEndReason
        description: ''
  - name: callerInfo
    uid: '@azure/communication-react.DeclarativeCall.callerInfo'
    package: '@azure/communication-react'
    summary: Caller Information if this call is incoming.
    fullName: callerInfo
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'callerInfo: CallerInfo'
      return:
        type: CallerInfo
        description: ''
  - name: direction
    uid: '@azure/communication-react.DeclarativeCall.direction'
    package: '@azure/communication-react'
    summary: 'Get the call direction, whether it is Incoming or Outgoing.'
    fullName: direction
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'direction: CallDirection'
      return:
        type: CallDirection
        description: ''
  - name: id
    uid: '@azure/communication-react.DeclarativeCall.id'
    package: '@azure/communication-react'
    summary: Get the unique Id for this Call.
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id: string'
      return:
        type: string
        description: ''
  - name: info
    uid: '@azure/communication-react.DeclarativeCall.info'
    package: '@azure/communication-react'
    summary: Get information about this Call.
    fullName: info
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'info: CallInfo'
      return:
        type: CallInfo
        description: ''
  - name: isMuted
    uid: '@azure/communication-react.DeclarativeCall.isMuted'
    package: '@azure/communication-react'
    summary: 'Whether local user is muted, locally or remotely.'
    fullName: isMuted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isMuted: boolean'
      return:
        type: boolean
        description: ''
  - name: isScreenSharingOn
    uid: '@azure/communication-react.DeclarativeCall.isScreenSharingOn'
    package: '@azure/communication-react'
    summary: Whether screen sharing is on.
    fullName: isScreenSharingOn
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isScreenSharingOn: boolean'
      return:
        type: boolean
        description: ''
  - name: localVideoStreams
    uid: '@azure/communication-react.DeclarativeCall.localVideoStreams'
    package: '@azure/communication-react'
    summary: >-
      Collection of local video streams being sent to other participants in a
      call.
    fullName: localVideoStreams
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'localVideoStreams: ReadonlyArray<LocalVideoStream>'
      return:
        type: ReadonlyArray&lt;LocalVideoStream&gt;
        description: ''
  - name: remoteParticipants
    uid: '@azure/communication-react.DeclarativeCall.remoteParticipants'
    package: '@azure/communication-react'
    summary: |-
      Collection of remote participants in this call.
      In case of calls with participants of hundred or more,
      only media active participants are present in this collection.
    fullName: remoteParticipants
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'remoteParticipants: ReadonlyArray<RemoteParticipant>'
      return:
        type: ReadonlyArray&lt;RemoteParticipant&gt;
        description: ''
  - name: state
    uid: '@azure/communication-react.DeclarativeCall.state'
    package: '@azure/communication-react'
    summary: Get the state of this Call.
    fullName: state
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'state: CallState'
      return:
        type: <xref uid="@azure/communication-react.CallState" />
        description: ''
  - name: totalParticipantCount
    uid: '@azure/communication-react.DeclarativeCall.totalParticipantCount'
    package: '@azure/communication-react'
    summary: Count of total number of participants in this call.
    fullName: totalParticipantCount
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'totalParticipantCount: number'
      return:
        type: number
        description: ''
methods:
  - name: addParticipant(CommunicationUserIdentifier | MicrosoftTeamsUserIdentifier)
    uid: '@azure/communication-react.DeclarativeCall.addParticipant'
    package: '@azure/communication-react'
    summary: Add a participant to this Call.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addParticipant(identifier: CommunicationUserIdentifier |
        MicrosoftTeamsUserIdentifier)
      parameters:
        - id: identifier
          type: CommunicationUserIdentifier | MicrosoftTeamsUserIdentifier
          description: The identifier of the participant to add.
      return:
        type: RemoteParticipant
        description: >-
          The RemoteParticipant object associated with the successfully added
          participant.
  - name: 'addParticipant(PhoneNumberIdentifier, AddPhoneNumberOptions)'
    uid: '@azure/communication-react.DeclarativeCall.addParticipant_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addParticipant(identifier: PhoneNumberIdentifier, options?:
        AddPhoneNumberOptions)
      parameters:
        - id: identifier
          type: PhoneNumberIdentifier
          description: ''
        - id: options
          type: AddPhoneNumberOptions
          description: ''
      return:
        type: RemoteParticipant
        description: ''
  - name: api<TFeature>(CallFeatureFactoryType<TFeature>)
    uid: '@azure/communication-react.DeclarativeCall.api'
    package: '@azure/communication-react'
    summary: >-
      Retrieves an initialized and memoized API feature object with extended
      API.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: 'function api<TFeature>(cls: CallFeatureFactoryType<TFeature>)'
      parameters:
        - id: cls
          type: CallFeatureFactoryType&lt;TFeature&gt;
          description: The call feature class that provides an object with extended API.
      return:
        type: TFeature
        description: ''
  - name: hangUp(HangUpOptions)
    uid: '@azure/communication-react.DeclarativeCall.hangUp'
    package: '@azure/communication-react'
    summary: Hang up the call.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function hangUp(options?: HangUpOptions)'
      parameters:
        - id: options
          type: HangUpOptions
          description: |
            HangUp options.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: hold()
    uid: '@azure/communication-react.DeclarativeCall.hold'
    package: '@azure/communication-react'
    summary: Put this Call on hold.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function hold()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: mute()
    uid: '@azure/communication-react.DeclarativeCall.mute'
    package: '@azure/communication-react'
    summary: Mute local microphone.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function mute()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'off("idChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.DeclarativeCall.off_1'
    package: '@azure/communication-react'
    summary: Unsubscribe function for idChanged event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "idChanged", listener: PropertyChangedEvent)'
      parameters:
        - id: event
          type: '"idChanged"'
          description: event name.
        - id: listener
          type: PropertyChangedEvent
          description: |
            callback fn that was used to subscribe to this event.
  - name: 'off("isMutedChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.DeclarativeCall.off_2'
    package: '@azure/communication-react'
    summary: Subscribe function for isMutedChanged event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "isMutedChanged", listener: PropertyChangedEvent)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: event name.
        - id: listener
          type: PropertyChangedEvent
          description: >
            callback fn that will be called when value of this property will
            change.
  - name: 'off("isScreenSharingOnChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.DeclarativeCall.off_3'
    package: '@azure/communication-react'
    summary: Unsubscribe function for isScreenSharingChanged event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isScreenSharingOnChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"isScreenSharingOnChanged"'
          description: event name.
        - id: listener
          type: PropertyChangedEvent
          description: |
            callback fn that was used to subscribe to this event.
  - name: 'off("localVideoStreamsUpdated", CollectionUpdatedEvent<LocalVideoStream>)'
    uid: '@azure/communication-react.DeclarativeCall.off_5'
    package: '@azure/communication-react'
    summary: Unsubscribe function for localVideoStreamsUpdated event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "localVideoStreamsUpdated", listener:
        CollectionUpdatedEvent<LocalVideoStream>)
      parameters:
        - id: event
          type: '"localVideoStreamsUpdated"'
          description: event name.
        - id: listener
          type: CollectionUpdatedEvent&lt;LocalVideoStream&gt;
          description: |
            callback fn that was used to subscribe to this event.
  - name: >-
      off("remoteParticipantsUpdated",
      CollectionUpdatedEvent<RemoteParticipant>)
    uid: '@azure/communication-react.DeclarativeCall.off_4'
    package: '@azure/communication-react'
    summary: Unsubscribe function for remoteParticipantsUpdated event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "remoteParticipantsUpdated", listener:
        CollectionUpdatedEvent<RemoteParticipant>)
      parameters:
        - id: event
          type: '"remoteParticipantsUpdated"'
          description: event name.
        - id: listener
          type: CollectionUpdatedEvent&lt;RemoteParticipant&gt;
          description: |
            callback fn that was used to subscribe to this event.
  - name: 'off("stateChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.DeclarativeCall.off'
    package: '@azure/communication-react'
    summary: Unsubscribe function for stateChanged event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "stateChanged", listener: PropertyChangedEvent)'
      parameters:
        - id: event
          type: '"stateChanged"'
          description: event name.
        - id: listener
          type: PropertyChangedEvent
          description: |
            callback fn that was used to subscribe to this event.
  - name: 'off("totalParticipantCountChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.DeclarativeCall.off_6'
    package: '@azure/communication-react'
    summary: unsubscribe function for totalParticipantCountChanged event.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "totalParticipantCountChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"totalParticipantCountChanged"'
          description: event name.
        - id: listener
          type: PropertyChangedEvent
          description: callback fn that will be called when the participant count changes.
  - name: 'on("idChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.DeclarativeCall.on_1'
    package: '@azure/communication-react'
    summary: Subscribe function for idChanged event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "idChanged", listener: PropertyChangedEvent)'
      parameters:
        - id: event
          type: '"idChanged"'
          description: event name.
        - id: listener
          type: PropertyChangedEvent
          description: >
            callback fn that will be called when value of this property will
            change.
  - name: 'on("isMutedChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.DeclarativeCall.on_2'
    package: '@azure/communication-react'
    summary: Subscribe function for isMutedChanged event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "isMutedChanged", listener: PropertyChangedEvent)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: event name.
        - id: listener
          type: PropertyChangedEvent
          description: >
            callback fn that will be called when value of this property will
            change.
  - name: 'on("isScreenSharingOnChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.DeclarativeCall.on_3'
    package: '@azure/communication-react'
    summary: Subscribe function for isScreenSharingChanged event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isScreenSharingOnChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"isScreenSharingOnChanged"'
          description: event name.
        - id: listener
          type: PropertyChangedEvent
          description: >
            callback fn that will be called when value of this property will
            change.
  - name: 'on("localVideoStreamsUpdated", CollectionUpdatedEvent<LocalVideoStream>)'
    uid: '@azure/communication-react.DeclarativeCall.on_5'
    package: '@azure/communication-react'
    summary: Subscribe function for localVideoStreamsUpdated event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "localVideoStreamsUpdated", listener:
        CollectionUpdatedEvent<LocalVideoStream>)
      parameters:
        - id: event
          type: '"localVideoStreamsUpdated"'
          description: event name.
        - id: listener
          type: CollectionUpdatedEvent&lt;LocalVideoStream&gt;
          description: |
            callback fn that will be called when this collection will change,
            it will pass arrays of added and removed elements.
  - name: 'on("remoteParticipantsUpdated", CollectionUpdatedEvent<RemoteParticipant>)'
    uid: '@azure/communication-react.DeclarativeCall.on_4'
    package: '@azure/communication-react'
    summary: Subscribe function for remoteParticipantsUpdated event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "remoteParticipantsUpdated", listener:
        CollectionUpdatedEvent<RemoteParticipant>)
      parameters:
        - id: event
          type: '"remoteParticipantsUpdated"'
          description: event name.
        - id: listener
          type: CollectionUpdatedEvent&lt;RemoteParticipant&gt;
          description: |
            callback fn that will be called when this collection will change,
            it will pass arrays of added and removed elements.
  - name: 'on("stateChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.DeclarativeCall.on'
    package: '@azure/communication-react'
    summary: Subscribe function for stateChanged event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "stateChanged", listener: PropertyChangedEvent)'
      parameters:
        - id: event
          type: '"stateChanged"'
          description: event name.
        - id: listener
          type: PropertyChangedEvent
          description: >
            callback fn that will be called when value of this property will
            change.
  - name: 'on("totalParticipantCountChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.DeclarativeCall.on_6'
    package: '@azure/communication-react'
    summary: Subscribe function for totalParticipantCountChanged event.
    remarks: ''
    isPreview: true
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "totalParticipantCountChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"totalParticipantCountChanged"'
          description: event name.
        - id: listener
          type: PropertyChangedEvent
          description: callback fn that will be called when the participant count changes.
  - name: >-
      removeParticipant(CommunicationUserIdentifier | PhoneNumberIdentifier |
      MicrosoftTeamsUserIdentifier | UnknownIdentifier)
    uid: '@azure/communication-react.DeclarativeCall.removeParticipant'
    package: '@azure/communication-react'
    summary: Remove a participant from this Call.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeParticipant(identifier: CommunicationUserIdentifier |
        PhoneNumberIdentifier | MicrosoftTeamsUserIdentifier |
        UnknownIdentifier)
      parameters:
        - id: identifier
          type: >-
            CommunicationUserIdentifier | PhoneNumberIdentifier |
            MicrosoftTeamsUserIdentifier | UnknownIdentifier
          description: |
            The identifier of the participant to remove.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: resume()
    uid: '@azure/communication-react.DeclarativeCall.resume'
    package: '@azure/communication-react'
    summary: Resume this Call if it is on 'LocalHold' state.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function resume()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: sendDtmf(DtmfTone)
    uid: '@azure/communication-react.DeclarativeCall.sendDtmf'
    package: '@azure/communication-react'
    summary: Send DTMF tone.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendDtmf(dtmfTone: DtmfTone)'
      parameters:
        - id: dtmfTone
          type: DtmfTone
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: startScreenSharing()
    uid: '@azure/communication-react.DeclarativeCall.startScreenSharing'
    package: '@azure/communication-react'
    summary: >-
      Start local screen sharing, browser handles screen/window enumeration and
      selection.

      Local screen sharing is not supported on iOS nor Android.

      Incoming screen sharing is supported on iOS and Android.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function startScreenSharing()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: startVideo(LocalVideoStream)
    uid: '@azure/communication-react.DeclarativeCall.startVideo'
    package: '@azure/communication-react'
    summary: |-
      Start sending video stream in the call.
      Remote participants in the call will receive your video stream
      so that they can render it in their UIs.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function startVideo(localVideoStream: LocalVideoStream)'
      parameters:
        - id: localVideoStream
          type: LocalVideoStream
          description: >
            Represents a local video stream that takes a camera source in
            constructor.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: stopScreenSharing()
    uid: '@azure/communication-react.DeclarativeCall.stopScreenSharing'
    package: '@azure/communication-react'
    summary: Stop local screen sharing.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function stopScreenSharing()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: stopVideo(LocalVideoStream)
    uid: '@azure/communication-react.DeclarativeCall.stopVideo'
    package: '@azure/communication-react'
    summary: >-
      Stop sending video stream in the call.

      Must pass the same LocalVideoStream object that was used to start video in

      the CallAgent.startCall() API, CallAgent.join() API ,
      IncomingCall.accept() API, or Call.startVideo() API.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function stopVideo(localVideoStream: LocalVideoStream)'
      parameters:
        - id: localVideoStream
          type: LocalVideoStream
          description: |
            The local video stream to stop streaming.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: unmute()
    uid: '@azure/communication-react.DeclarativeCall.unmute'
    package: '@azure/communication-react'
    summary: Unmute local microphone.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function unmute()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: unsubscribe()
    uid: '@azure/communication-react.DeclarativeCall.unsubscribe'
    package: '@azure/communication-react'
    summary: >-
      Stop any declarative specific subscriptions and remove declarative
      subscribers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function unsubscribe()
extends: Call
