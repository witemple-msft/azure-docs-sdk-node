### YamlMime:TSType
name: ParticipantItemProps
uid: '@azure/communication-react.ParticipantItemProps'
package: '@azure/communication-react'
summary: Props for ParticipantItem component
fullName: ParticipantItemProps
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: displayName
    uid: '@azure/communication-react.ParticipantItemProps.displayName'
    package: '@azure/communication-react'
    summary: Name of participant.
    fullName: displayName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'displayName: string'
      return:
        type: string
        description: ''
  - name: me
    uid: '@azure/communication-react.ParticipantItemProps.me'
    package: '@azure/communication-react'
    summary: Optional indicator to show participant is the user.
    fullName: me
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'me?: boolean'
      return:
        type: boolean
        description: ''
  - name: menuItems
    uid: '@azure/communication-react.ParticipantItemProps.menuItems'
    package: '@azure/communication-react'
    summary: Optional array of IContextualMenuItem for contextual menu.
    fullName: menuItems
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'menuItems?: IContextualMenuItem[]'
      return:
        type: 'IContextualMenuItem[]'
        description: ''
  - name: onRenderAvatar
    uid: '@azure/communication-react.ParticipantItemProps.onRenderAvatar'
    package: '@azure/communication-react'
    summary: Optional callback returning a JSX element to override avatar.
    fullName: onRenderAvatar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderAvatar?: OnRenderAvatarCallback'
      return:
        type: <xref uid="@azure/communication-react.OnRenderAvatarCallback" />
        description: ''
  - name: onRenderIcon
    uid: '@azure/communication-react.ParticipantItemProps.onRenderIcon'
    package: '@azure/communication-react'
    summary: >-
      Optional callback returning a JSX element rendered on the right portion of
      the ParticipantItem. Intended for adding icons.
    fullName: onRenderIcon
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderIcon?: (props?: ParticipantItemProps) => Element | null'
      return:
        type: '(props?: ParticipantItemProps) =&gt; Element | null'
        description: ''
  - name: presence
    uid: '@azure/communication-react.ParticipantItemProps.presence'
    package: '@azure/communication-react'
    summary: >-
      Optional PersonaPresence to show participant presence. This will not have
      an effect if property avatar is assigned.
    fullName: presence
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'presence?: PersonaPresence'
      return:
        type: PersonaPresence
        description: ''
  - name: strings
    uid: '@azure/communication-react.ParticipantItemProps.strings'
    package: '@azure/communication-react'
    summary: Optional strings to override in component
    fullName: strings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strings?: Partial<ParticipantItemStrings>'
      return:
        type: >-
          Partial&lt;<xref
          uid="@azure/communication-react.ParticipantItemStrings" />&gt;
        description: ''
  - name: styles
    uid: '@azure/communication-react.ParticipantItemProps.styles'
    package: '@azure/communication-react'
    summary: Allows users to pass in an object contains custom CSS styles.
    fullName: styles
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: ParticipantItemStylesProps'
      return:
        type: <xref uid="@azure/communication-react.ParticipantItemStylesProps" />
        description: ''
  - name: userId
    uid: '@azure/communication-react.ParticipantItemProps.userId'
    package: '@azure/communication-react'
    summary: >-
      Unique User ID of the participant. This `userId` is available in the
      `onRenderAvatar` callback function
    fullName: userId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userId?: string'
      return:
        type: string
        description: ''
