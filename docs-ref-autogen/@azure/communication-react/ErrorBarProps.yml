### YamlMime:TSType
name: ErrorBarProps
uid: '@azure/communication-react.ErrorBarProps'
package: '@azure/communication-react'
summary: >
  <xref:ErrorBar> properties.

  In addition to the following, <xref:ErrorBar> forwards all

  <xref:%40fluentui%2Freact%23IMessageBarProps> to the underlying
  <xref:%40fluentui%2Freact%23MessageBar>.
fullName: ErrorBarProps
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: about
    uid: '@azure/communication-react.ErrorBarProps.about'
    package: '@azure/communication-react'
    summary: ''
    fullName: about
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'about?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: accessKey
    uid: '@azure/communication-react.ErrorBarProps.accessKey'
    package: '@azure/communication-react'
    summary: ''
    fullName: accessKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'accessKey?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: actions
    uid: '@azure/communication-react.ErrorBarProps.actions'
    package: '@azure/communication-react'
    summary: The actions you want to show on the other side.
    fullName: actions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'actions?: Element'
      return:
        type: Element
        description: ''
  - name: activeErrors
    uid: '@azure/communication-react.ErrorBarProps.activeErrors'
    package: '@azure/communication-react'
    summary: Currently active errors.
    fullName: activeErrors
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'activeErrors: ActiveError[]'
      return:
        type: '<xref uid="@azure/communication-react.ActiveError" />[]'
        description: ''
  - name: aria-activedescendant
    uid: '@azure/communication-react.ErrorBarProps.aria-activedescendant'
    package: '@azure/communication-react'
    summary: >-
      Identifies the currently active element when DOM focus is on a composite
      widget, textbox, group, or application.
    fullName: aria-activedescendant
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-activedescendant?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-atomic
    uid: '@azure/communication-react.ErrorBarProps.aria-atomic'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether assistive technologies will present all, or only parts
      of, the changed region based on the change notifications defined by the
      aria-relevant attribute.
    fullName: aria-atomic
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-atomic?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-autocomplete
    uid: '@azure/communication-react.ErrorBarProps.aria-autocomplete'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether inputting text could trigger display of one or more
      predictions of the user's intended value for an input and specifies how
      predictions would be

      presented if they are made.
    fullName: aria-autocomplete
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-autocomplete?: "none" | "inline" | "list" | "both" | undefined'
      return:
        type: '"none" | "inline" | "list" | "both" | undefined'
        description: ''
  - name: aria-busy
    uid: '@azure/communication-react.ErrorBarProps.aria-busy'
    package: '@azure/communication-react'
    summary: >-
      Indicates an element is being modified and that assistive technologies MAY
      want to wait until the modifications are complete before exposing them to
      the user.
    fullName: aria-busy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-busy?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-checked
    uid: '@azure/communication-react.ErrorBarProps.aria-checked'
    package: '@azure/communication-react'
    summary: >-
      Indicates the current "checked" state of checkboxes, radio buttons, and
      other widgets.
    fullName: aria-checked
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-checked?: boolean | "false" | "mixed" | "true" | undefined'
      return:
        type: boolean | "false" | "mixed" | "true" | undefined
        description: ''
  - name: aria-colcount
    uid: '@azure/communication-react.ErrorBarProps.aria-colcount'
    package: '@azure/communication-react'
    summary: 'Defines the total number of columns in a table, grid, or treegrid.'
    fullName: aria-colcount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-colcount?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-colindex
    uid: '@azure/communication-react.ErrorBarProps.aria-colindex'
    package: '@azure/communication-react'
    summary: >-
      Defines an element's column index or position with respect to the total
      number of columns within a table, grid, or treegrid.
    fullName: aria-colindex
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-colindex?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-colspan
    uid: '@azure/communication-react.ErrorBarProps.aria-colspan'
    package: '@azure/communication-react'
    summary: >-
      Defines the number of columns spanned by a cell or gridcell within a
      table, grid, or treegrid.
    fullName: aria-colspan
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-colspan?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-controls
    uid: '@azure/communication-react.ErrorBarProps.aria-controls'
    package: '@azure/communication-react'
    summary: >-
      Identifies the element (or elements) whose contents or presence are
      controlled by the current element.
    fullName: aria-controls
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-controls?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-current
    uid: '@azure/communication-react.ErrorBarProps.aria-current'
    package: '@azure/communication-react'
    summary: >-
      Indicates the element that represents the current item within a container
      or set of related elements.
    fullName: aria-current
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        aria-current?: boolean | "false" | "true" | "page" | "step" | "location"
        | "date" | "time" | undefined
      return:
        type: >-
          boolean | "false" | "true" | "page" | "step" | "location" | "date" |
          "time" | undefined
        description: ''
  - name: aria-describedby
    uid: '@azure/communication-react.ErrorBarProps.aria-describedby'
    package: '@azure/communication-react'
    summary: Identifies the element (or elements) that describes the object.
    fullName: aria-describedby
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-describedby?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-details
    uid: '@azure/communication-react.ErrorBarProps.aria-details'
    package: '@azure/communication-react'
    summary: >-
      Identifies the element that provides a detailed, extended description for
      the object.
    fullName: aria-details
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-details?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-disabled
    uid: '@azure/communication-react.ErrorBarProps.aria-disabled'
    package: '@azure/communication-react'
    summary: >-
      Indicates that the element is perceivable but disabled, so it is not
      editable or otherwise operable.
    fullName: aria-disabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-disabled?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-dropeffect
    uid: '@azure/communication-react.ErrorBarProps.aria-dropeffect'
    package: '@azure/communication-react'
    summary: >-
      Indicates what functions can be performed when a dragged object is
      released on the drop target.
    fullName: aria-dropeffect
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: in ARIA 1.1
    syntax:
      content: >-
        aria-dropeffect?: "none" | "copy" | "execute" | "link" | "move" |
        "popup" | undefined
      return:
        type: '"none" | "copy" | "execute" | "link" | "move" | "popup" | undefined'
        description: ''
  - name: aria-errormessage
    uid: '@azure/communication-react.ErrorBarProps.aria-errormessage'
    package: '@azure/communication-react'
    summary: Identifies the element that provides an error message for the object.
    fullName: aria-errormessage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-errormessage?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-expanded
    uid: '@azure/communication-react.ErrorBarProps.aria-expanded'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether the element, or another grouping element it controls, is
      currently expanded or collapsed.
    fullName: aria-expanded
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-expanded?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-flowto
    uid: '@azure/communication-react.ErrorBarProps.aria-flowto'
    package: '@azure/communication-react'
    summary: >-
      Identifies the next element (or elements) in an alternate reading order of
      content which, at the user's discretion,

      allows assistive technology to override the general default of reading in
      document source order.
    fullName: aria-flowto
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-flowto?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-grabbed
    uid: '@azure/communication-react.ErrorBarProps.aria-grabbed'
    package: '@azure/communication-react'
    summary: Indicates an element's "grabbed" state in a drag-and-drop operation.
    fullName: aria-grabbed
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: in ARIA 1.1
    syntax:
      content: 'aria-grabbed?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-haspopup
    uid: '@azure/communication-react.ErrorBarProps.aria-haspopup'
    package: '@azure/communication-react'
    summary: >-
      Indicates the availability and type of interactive popup element, such as
      menu or dialog, that can be triggered by an element.
    fullName: aria-haspopup
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        aria-haspopup?: boolean | "false" | "true" | "menu" | "listbox" | "tree"
        | "grid" | "dialog" | undefined
      return:
        type: >-
          boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" |
          "dialog" | undefined
        description: ''
  - name: aria-hidden
    uid: '@azure/communication-react.ErrorBarProps.aria-hidden'
    package: '@azure/communication-react'
    summary: Indicates whether the element is exposed to an accessibility API.
    fullName: aria-hidden
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-hidden?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-invalid
    uid: '@azure/communication-react.ErrorBarProps.aria-invalid'
    package: '@azure/communication-react'
    summary: >-
      Indicates the entered value does not conform to the format expected by the
      application.
    fullName: aria-invalid
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        aria-invalid?: boolean | "false" | "true" | "grammar" | "spelling" |
        undefined
      return:
        type: boolean | "false" | "true" | "grammar" | "spelling" | undefined
        description: ''
  - name: aria-keyshortcuts
    uid: '@azure/communication-react.ErrorBarProps.aria-keyshortcuts'
    package: '@azure/communication-react'
    summary: >-
      Indicates keyboard shortcuts that an author has implemented to activate or
      give focus to an element.
    fullName: aria-keyshortcuts
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-keyshortcuts?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-label
    uid: '@azure/communication-react.ErrorBarProps.aria-label'
    package: '@azure/communication-react'
    summary: Defines a string value that labels the current element.
    fullName: aria-label
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-label?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-labelledby
    uid: '@azure/communication-react.ErrorBarProps.aria-labelledby'
    package: '@azure/communication-react'
    summary: Identifies the element (or elements) that labels the current element.
    fullName: aria-labelledby
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-labelledby?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-level
    uid: '@azure/communication-react.ErrorBarProps.aria-level'
    package: '@azure/communication-react'
    summary: Defines the hierarchical level of an element within a structure.
    fullName: aria-level
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-level?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-live
    uid: '@azure/communication-react.ErrorBarProps.aria-live'
    package: '@azure/communication-react'
    summary: >-
      Indicates that an element will be updated, and describes the types of
      updates the user agents, assistive technologies, and user can expect from
      the live region.
    fullName: aria-live
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-live?: "off" | "assertive" | "polite" | undefined'
      return:
        type: '"off" | "assertive" | "polite" | undefined'
        description: ''
  - name: aria-modal
    uid: '@azure/communication-react.ErrorBarProps.aria-modal'
    package: '@azure/communication-react'
    summary: Indicates whether an element is modal when displayed.
    fullName: aria-modal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-modal?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-multiline
    uid: '@azure/communication-react.ErrorBarProps.aria-multiline'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether a text box accepts multiple lines of input or only a
      single line.
    fullName: aria-multiline
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-multiline?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-multiselectable
    uid: '@azure/communication-react.ErrorBarProps.aria-multiselectable'
    package: '@azure/communication-react'
    summary: >-
      Indicates that the user may select more than one item from the current
      selectable descendants.
    fullName: aria-multiselectable
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-multiselectable?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-orientation
    uid: '@azure/communication-react.ErrorBarProps.aria-orientation'
    package: '@azure/communication-react'
    summary: >-
      Indicates whether the element's orientation is horizontal, vertical, or
      unknown/ambiguous.
    fullName: aria-orientation
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-orientation?: "horizontal" | "vertical" | undefined'
      return:
        type: '"horizontal" | "vertical" | undefined'
        description: ''
  - name: aria-owns
    uid: '@azure/communication-react.ErrorBarProps.aria-owns'
    package: '@azure/communication-react'
    summary: >-
      Identifies an element (or elements) in order to define a visual,
      functional, or contextual parent/child relationship

      between DOM elements where the DOM hierarchy cannot be used to represent
      the relationship.
    fullName: aria-owns
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-owns?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-placeholder
    uid: '@azure/communication-react.ErrorBarProps.aria-placeholder'
    package: '@azure/communication-react'
    summary: >-
      Defines a short hint (a word or short phrase) intended to aid the user
      with data entry when the control has no value.

      A hint could be a sample value or a brief description of the expected
      format.
    fullName: aria-placeholder
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-placeholder?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-posinset
    uid: '@azure/communication-react.ErrorBarProps.aria-posinset'
    package: '@azure/communication-react'
    summary: >-
      Defines an element's number or position in the current set of listitems or
      treeitems. Not required if all elements in the set are present in the DOM.
    fullName: aria-posinset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-posinset?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-pressed
    uid: '@azure/communication-react.ErrorBarProps.aria-pressed'
    package: '@azure/communication-react'
    summary: Indicates the current "pressed" state of toggle buttons.
    fullName: aria-pressed
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-pressed?: boolean | "false" | "mixed" | "true" | undefined'
      return:
        type: boolean | "false" | "mixed" | "true" | undefined
        description: ''
  - name: aria-readonly
    uid: '@azure/communication-react.ErrorBarProps.aria-readonly'
    package: '@azure/communication-react'
    summary: 'Indicates that the element is not editable, but is otherwise operable.'
    fullName: aria-readonly
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-readonly?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-relevant
    uid: '@azure/communication-react.ErrorBarProps.aria-relevant'
    package: '@azure/communication-react'
    summary: >-
      Indicates what notifications the user agent will trigger when the
      accessibility tree within a live region is modified.
    fullName: aria-relevant
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        aria-relevant?: "additions" | "additions removals" | "additions text" |
        "all" | "removals" | "removals additions" | "removals text" | "text" |
        "text additions" | "text removals" | undefined
      return:
        type: >-
          "additions" | "additions removals" | "additions text" | "all" |
          "removals" | "removals additions" | "removals text" | "text" | "text
          additions" | "text removals" | undefined
        description: ''
  - name: aria-required
    uid: '@azure/communication-react.ErrorBarProps.aria-required'
    package: '@azure/communication-react'
    summary: >-
      Indicates that user input is required on the element before a form may be
      submitted.
    fullName: aria-required
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-required?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-roledescription
    uid: '@azure/communication-react.ErrorBarProps.aria-roledescription'
    package: '@azure/communication-react'
    summary: >-
      Defines a human-readable, author-localized description for the role of an
      element.
    fullName: aria-roledescription
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-roledescription?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: aria-rowcount
    uid: '@azure/communication-react.ErrorBarProps.aria-rowcount'
    package: '@azure/communication-react'
    summary: 'Defines the total number of rows in a table, grid, or treegrid.'
    fullName: aria-rowcount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-rowcount?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-rowindex
    uid: '@azure/communication-react.ErrorBarProps.aria-rowindex'
    package: '@azure/communication-react'
    summary: >-
      Defines an element's row index or position with respect to the total
      number of rows within a table, grid, or treegrid.
    fullName: aria-rowindex
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-rowindex?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-rowspan
    uid: '@azure/communication-react.ErrorBarProps.aria-rowspan'
    package: '@azure/communication-react'
    summary: >-
      Defines the number of rows spanned by a cell or gridcell within a table,
      grid, or treegrid.
    fullName: aria-rowspan
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-rowspan?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-selected
    uid: '@azure/communication-react.ErrorBarProps.aria-selected'
    package: '@azure/communication-react'
    summary: Indicates the current "selected" state of various widgets.
    fullName: aria-selected
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-selected?: boolean | "false" | "true" | undefined'
      return:
        type: boolean | "false" | "true" | undefined
        description: ''
  - name: aria-setsize
    uid: '@azure/communication-react.ErrorBarProps.aria-setsize'
    package: '@azure/communication-react'
    summary: >-
      Defines the number of items in the current set of listitems or treeitems.
      Not required if all elements in the set are present in the DOM.
    fullName: aria-setsize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-setsize?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-sort
    uid: '@azure/communication-react.ErrorBarProps.aria-sort'
    package: '@azure/communication-react'
    summary: >-
      Indicates if items in a table or grid are sorted in ascending or
      descending order.
    fullName: aria-sort
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-sort?: "none" | "ascending" | "descending" | "other" | undefined'
      return:
        type: '"none" | "ascending" | "descending" | "other" | undefined'
        description: ''
  - name: aria-valuemax
    uid: '@azure/communication-react.ErrorBarProps.aria-valuemax'
    package: '@azure/communication-react'
    summary: Defines the maximum allowed value for a range widget.
    fullName: aria-valuemax
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-valuemax?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-valuemin
    uid: '@azure/communication-react.ErrorBarProps.aria-valuemin'
    package: '@azure/communication-react'
    summary: Defines the minimum allowed value for a range widget.
    fullName: aria-valuemin
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-valuemin?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-valuenow
    uid: '@azure/communication-react.ErrorBarProps.aria-valuenow'
    package: '@azure/communication-react'
    summary: Defines the current value for a range widget.
    fullName: aria-valuenow
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-valuenow?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: aria-valuetext
    uid: '@azure/communication-react.ErrorBarProps.aria-valuetext'
    package: '@azure/communication-react'
    summary: >-
      Defines the human readable text alternative of aria-valuenow for a range
      widget.
    fullName: aria-valuetext
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'aria-valuetext?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: ariaLabel
    uid: '@azure/communication-react.ErrorBarProps.ariaLabel'
    package: '@azure/communication-react'
    summary: A description of the message bar for the benefit of screen readers.
    fullName: ariaLabel
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: Use native prop `aria-label` instead.
    syntax:
      content: 'ariaLabel?: string'
      return:
        type: string
        description: ''
  - name: autoCapitalize
    uid: '@azure/communication-react.ErrorBarProps.autoCapitalize'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoCapitalize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoCapitalize?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: autoCorrect
    uid: '@azure/communication-react.ErrorBarProps.autoCorrect'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoCorrect
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoCorrect?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: autoSave
    uid: '@azure/communication-react.ErrorBarProps.autoSave'
    package: '@azure/communication-react'
    summary: ''
    fullName: autoSave
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoSave?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: children
    uid: '@azure/communication-react.ErrorBarProps.children'
    package: '@azure/communication-react'
    summary: ''
    fullName: children
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'children?: ReactNode | undefined'
      return:
        type: ReactNode | undefined
        description: ''
  - name: className
    uid: '@azure/communication-react.ErrorBarProps.className'
    package: '@azure/communication-react'
    summary: Additional CSS class(es) to apply to the MessageBar.
    fullName: className
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'className?: string'
      return:
        type: string
        description: ''
  - name: color
    uid: '@azure/communication-react.ErrorBarProps.color'
    package: '@azure/communication-react'
    summary: ''
    fullName: color
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'color?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: componentRef
    uid: '@azure/communication-react.ErrorBarProps.componentRef'
    package: '@azure/communication-react'
    summary: >-
      Optional callback to access the IMessageBar interface. Use this instead of
      ref for accessing

      the public methods and properties of the component.
    fullName: componentRef
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'componentRef?: IRefObject<IMessageBar>'
      return:
        type: IRefObject&lt;IMessageBar&gt;
        description: ''
  - name: contentEditable
    uid: '@azure/communication-react.ErrorBarProps.contentEditable'
    package: '@azure/communication-react'
    summary: ''
    fullName: contentEditable
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'contentEditable?: Booleanish | "inherit" | undefined'
      return:
        type: Booleanish | "inherit" | undefined
        description: ''
  - name: contextMenu
    uid: '@azure/communication-react.ErrorBarProps.contextMenu'
    package: '@azure/communication-react'
    summary: ''
    fullName: contextMenu
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'contextMenu?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: dangerouslySetInnerHTML
    uid: '@azure/communication-react.ErrorBarProps.dangerouslySetInnerHTML'
    package: '@azure/communication-react'
    summary: ''
    fullName: dangerouslySetInnerHTML
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dangerouslySetInnerHTML?: Object | undefined'
      return:
        type: Object | undefined
        description: ''
  - name: datatype
    uid: '@azure/communication-react.ErrorBarProps.datatype'
    package: '@azure/communication-react'
    summary: ''
    fullName: datatype
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'datatype?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: defaultChecked
    uid: '@azure/communication-react.ErrorBarProps.defaultChecked'
    package: '@azure/communication-react'
    summary: ''
    fullName: defaultChecked
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultChecked?: boolean | undefined'
      return:
        type: boolean | undefined
        description: ''
  - name: defaultValue
    uid: '@azure/communication-react.ErrorBarProps.defaultValue'
    package: '@azure/communication-react'
    summary: ''
    fullName: defaultValue
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'defaultValue?: string | number | ReadonlyArray<string> | undefined'
      return:
        type: string | number | ReadonlyArray&lt;string&gt; | undefined
        description: ''
  - name: dir
    uid: '@azure/communication-react.ErrorBarProps.dir'
    package: '@azure/communication-react'
    summary: ''
    fullName: dir
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dir?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: dismissButtonAriaLabel
    uid: '@azure/communication-react.ErrorBarProps.dismissButtonAriaLabel'
    package: '@azure/communication-react'
    summary: Aria label on dismiss button if onDismiss is defined.
    fullName: dismissButtonAriaLabel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dismissButtonAriaLabel?: string'
      return:
        type: string
        description: ''
  - name: dismissIconProps
    uid: '@azure/communication-react.ErrorBarProps.dismissIconProps'
    package: '@azure/communication-react'
    summary: |-
      Custom icon prop to replace the dismiss icon.
      If unset, default will be the Fabric Clear icon.
    fullName: dismissIconProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dismissIconProps?: IIconProps'
      return:
        type: IIconProps
        description: ''
  - name: draggable
    uid: '@azure/communication-react.ErrorBarProps.draggable'
    package: '@azure/communication-react'
    summary: ''
    fullName: draggable
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'draggable?: Booleanish | undefined'
      return:
        type: Booleanish | undefined
        description: ''
  - name: hidden
    uid: '@azure/communication-react.ErrorBarProps.hidden'
    package: '@azure/communication-react'
    summary: ''
    fullName: hidden
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'hidden?: boolean | undefined'
      return:
        type: boolean | undefined
        description: ''
  - name: id
    uid: '@azure/communication-react.ErrorBarProps.id'
    package: '@azure/communication-react'
    summary: ''
    fullName: id
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'id?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: inlist
    uid: '@azure/communication-react.ErrorBarProps.inlist'
    package: '@azure/communication-react'
    summary: ''
    fullName: inlist
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'inlist?: any'
      return:
        type: any
        description: ''
  - name: inputMode
    uid: '@azure/communication-react.ErrorBarProps.inputMode'
    package: '@azure/communication-react'
    summary: >-
      Hints at the type of data that might be entered by the user while editing
      the element or its contents
    fullName: inputMode
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        inputMode?: "none" | "text" | "tel" | "url" | "email" | "numeric" |
        "decimal" | "search" | undefined
      return:
        type: >-
          "none" | "text" | "tel" | "url" | "email" | "numeric" | "decimal" |
          "search" | undefined
        description: ''
  - name: is
    uid: '@azure/communication-react.ErrorBarProps.is'
    package: '@azure/communication-react'
    summary: >-
      Specify that a standard HTML element should behave like a defined custom
      built-in element
    fullName: is
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'is?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: isMultiline
    uid: '@azure/communication-react.ErrorBarProps.isMultiline'
    package: '@azure/communication-react'
    summary: >-
      Determines if the message bar is multi lined.

      If false, and the text overflows over buttons or to another line, it is
      clipped.
    fullName: isMultiline
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isMultiline?: boolean'
      return:
        type: boolean
        description: ''
  - name: itemID
    uid: '@azure/communication-react.ErrorBarProps.itemID'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemID?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: itemProp
    uid: '@azure/communication-react.ErrorBarProps.itemProp'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemProp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemProp?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: itemRef
    uid: '@azure/communication-react.ErrorBarProps.itemRef'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemRef
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemRef?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: itemScope
    uid: '@azure/communication-react.ErrorBarProps.itemScope'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemScope
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemScope?: boolean | undefined'
      return:
        type: boolean | undefined
        description: ''
  - name: itemType
    uid: '@azure/communication-react.ErrorBarProps.itemType'
    package: '@azure/communication-react'
    summary: ''
    fullName: itemType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'itemType?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: key
    uid: '@azure/communication-react.ErrorBarProps.key'
    package: '@azure/communication-react'
    summary: ''
    fullName: key
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'key?: Key | null | undefined'
      return:
        type: Key | null | undefined
        description: ''
  - name: lang
    uid: '@azure/communication-react.ErrorBarProps.lang'
    package: '@azure/communication-react'
    summary: ''
    fullName: lang
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lang?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: messageBarIconProps
    uid: '@azure/communication-react.ErrorBarProps.messageBarIconProps'
    package: '@azure/communication-react'
    summary: |-
      Custom icon prop to replace the message bar icon.
      If unset, default will be the icon set by messageBarType.
    fullName: messageBarIconProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'messageBarIconProps?: IIconProps'
      return:
        type: IIconProps
        description: ''
  - name: messageBarType
    uid: '@azure/communication-react.ErrorBarProps.messageBarType'
    package: '@azure/communication-react'
    summary: The type of MessageBar to render.
    fullName: messageBarType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'messageBarType?: MessageBarType'
      return:
        type: MessageBarType
        description: ''
  - name: onAbort
    uid: '@azure/communication-react.ErrorBarProps.onAbort'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAbort
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onAbort?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onAbortCapture
    uid: '@azure/communication-react.ErrorBarProps.onAbortCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAbortCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onAbortCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onAnimationEnd
    uid: '@azure/communication-react.ErrorBarProps.onAnimationEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onAnimationEnd?: AnimationEventHandler<HTMLElement> | undefined'
      return:
        type: AnimationEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onAnimationEndCapture
    uid: '@azure/communication-react.ErrorBarProps.onAnimationEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationEndCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onAnimationEndCapture?: AnimationEventHandler<HTMLElement> | undefined'
      return:
        type: AnimationEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onAnimationIteration
    uid: '@azure/communication-react.ErrorBarProps.onAnimationIteration'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationIteration
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onAnimationIteration?: AnimationEventHandler<HTMLElement> | undefined'
      return:
        type: AnimationEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onAnimationIterationCapture
    uid: '@azure/communication-react.ErrorBarProps.onAnimationIterationCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationIterationCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onAnimationIterationCapture?: AnimationEventHandler<HTMLElement> |
        undefined
      return:
        type: AnimationEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onAnimationStart
    uid: '@azure/communication-react.ErrorBarProps.onAnimationStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onAnimationStart?: AnimationEventHandler<HTMLElement> | undefined'
      return:
        type: AnimationEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onAnimationStartCapture
    uid: '@azure/communication-react.ErrorBarProps.onAnimationStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAnimationStartCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onAnimationStartCapture?: AnimationEventHandler<HTMLElement> | undefined'
      return:
        type: AnimationEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onAuxClick
    uid: '@azure/communication-react.ErrorBarProps.onAuxClick'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAuxClick
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onAuxClick?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onAuxClickCapture
    uid: '@azure/communication-react.ErrorBarProps.onAuxClickCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onAuxClickCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onAuxClickCapture?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onBeforeInput
    uid: '@azure/communication-react.ErrorBarProps.onBeforeInput'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBeforeInput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onBeforeInput?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onBeforeInputCapture
    uid: '@azure/communication-react.ErrorBarProps.onBeforeInputCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBeforeInputCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onBeforeInputCapture?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onBlur
    uid: '@azure/communication-react.ErrorBarProps.onBlur'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBlur
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onBlur?: FocusEventHandler<HTMLElement> | undefined'
      return:
        type: FocusEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onBlurCapture
    uid: '@azure/communication-react.ErrorBarProps.onBlurCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onBlurCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onBlurCapture?: FocusEventHandler<HTMLElement> | undefined'
      return:
        type: FocusEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCanPlay
    uid: '@azure/communication-react.ErrorBarProps.onCanPlay'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlay
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCanPlay?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCanPlayCapture
    uid: '@azure/communication-react.ErrorBarProps.onCanPlayCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlayCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCanPlayCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCanPlayThrough
    uid: '@azure/communication-react.ErrorBarProps.onCanPlayThrough'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlayThrough
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCanPlayThrough?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCanPlayThroughCapture
    uid: '@azure/communication-react.ErrorBarProps.onCanPlayThroughCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCanPlayThroughCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCanPlayThroughCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onChange
    uid: '@azure/communication-react.ErrorBarProps.onChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onChange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onChange?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onChangeCapture
    uid: '@azure/communication-react.ErrorBarProps.onChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onChangeCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onChangeCapture?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onClick
    uid: '@azure/communication-react.ErrorBarProps.onClick'
    package: '@azure/communication-react'
    summary: ''
    fullName: onClick
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onClick?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onClickCapture
    uid: '@azure/communication-react.ErrorBarProps.onClickCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onClickCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onClickCapture?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCompositionEnd
    uid: '@azure/communication-react.ErrorBarProps.onCompositionEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCompositionEnd?: CompositionEventHandler<HTMLElement> | undefined'
      return:
        type: CompositionEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCompositionEndCapture
    uid: '@azure/communication-react.ErrorBarProps.onCompositionEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionEndCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCompositionEndCapture?: CompositionEventHandler<HTMLElement> |
        undefined
      return:
        type: CompositionEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCompositionStart
    uid: '@azure/communication-react.ErrorBarProps.onCompositionStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCompositionStart?: CompositionEventHandler<HTMLElement> | undefined'
      return:
        type: CompositionEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCompositionStartCapture
    uid: '@azure/communication-react.ErrorBarProps.onCompositionStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionStartCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCompositionStartCapture?: CompositionEventHandler<HTMLElement> |
        undefined
      return:
        type: CompositionEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCompositionUpdate
    uid: '@azure/communication-react.ErrorBarProps.onCompositionUpdate'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionUpdate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCompositionUpdate?: CompositionEventHandler<HTMLElement> | undefined'
      return:
        type: CompositionEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCompositionUpdateCapture
    uid: '@azure/communication-react.ErrorBarProps.onCompositionUpdateCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCompositionUpdateCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCompositionUpdateCapture?: CompositionEventHandler<HTMLElement> |
        undefined
      return:
        type: CompositionEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onContextMenu
    uid: '@azure/communication-react.ErrorBarProps.onContextMenu'
    package: '@azure/communication-react'
    summary: ''
    fullName: onContextMenu
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onContextMenu?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onContextMenuCapture
    uid: '@azure/communication-react.ErrorBarProps.onContextMenuCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onContextMenuCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onContextMenuCapture?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCopy
    uid: '@azure/communication-react.ErrorBarProps.onCopy'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCopy
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCopy?: ClipboardEventHandler<HTMLElement> | undefined'
      return:
        type: ClipboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCopyCapture
    uid: '@azure/communication-react.ErrorBarProps.onCopyCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCopyCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCopyCapture?: ClipboardEventHandler<HTMLElement> | undefined'
      return:
        type: ClipboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCut
    uid: '@azure/communication-react.ErrorBarProps.onCut'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCut
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCut?: ClipboardEventHandler<HTMLElement> | undefined'
      return:
        type: ClipboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onCutCapture
    uid: '@azure/communication-react.ErrorBarProps.onCutCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onCutCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onCutCapture?: ClipboardEventHandler<HTMLElement> | undefined'
      return:
        type: ClipboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDismiss
    uid: '@azure/communication-react.ErrorBarProps.onDismiss'
    package: '@azure/communication-react'
    summary: |-
      Whether the message bar has a dismiss button and its callback.
      If null, we don't show a dismiss button.
    fullName: onDismiss
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDismiss?: (ev?: MouseEvent<HTMLElement | BaseButton | Button>) => any'
      return:
        type: '(ev?: MouseEvent&lt;HTMLElement | BaseButton | Button&gt;) =&gt; any'
        description: ''
  - name: onDoubleClick
    uid: '@azure/communication-react.ErrorBarProps.onDoubleClick'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDoubleClick
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDoubleClick?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDoubleClickCapture
    uid: '@azure/communication-react.ErrorBarProps.onDoubleClickCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDoubleClickCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDoubleClickCapture?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDrag
    uid: '@azure/communication-react.ErrorBarProps.onDrag'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDrag
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDrag?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragCapture?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragEnd
    uid: '@azure/communication-react.ErrorBarProps.onDragEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragEnd?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragEndCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEndCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragEndCapture?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragEnter
    uid: '@azure/communication-react.ErrorBarProps.onDragEnter'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEnter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragEnter?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragEnterCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragEnterCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragEnterCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragEnterCapture?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragExit
    uid: '@azure/communication-react.ErrorBarProps.onDragExit'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragExit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragExit?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragExitCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragExitCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragExitCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragExitCapture?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragLeave
    uid: '@azure/communication-react.ErrorBarProps.onDragLeave'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragLeave
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragLeave?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragLeaveCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragLeaveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragLeaveCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragLeaveCapture?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragOver
    uid: '@azure/communication-react.ErrorBarProps.onDragOver'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragOver
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragOver?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragOverCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragOverCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragOverCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragOverCapture?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragStart
    uid: '@azure/communication-react.ErrorBarProps.onDragStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragStart?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDragStartCapture
    uid: '@azure/communication-react.ErrorBarProps.onDragStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDragStartCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDragStartCapture?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDrop
    uid: '@azure/communication-react.ErrorBarProps.onDrop'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDrop
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDrop?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDropCapture
    uid: '@azure/communication-react.ErrorBarProps.onDropCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDropCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDropCapture?: DragEventHandler<HTMLElement> | undefined'
      return:
        type: DragEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDurationChange
    uid: '@azure/communication-react.ErrorBarProps.onDurationChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDurationChange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDurationChange?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onDurationChangeCapture
    uid: '@azure/communication-react.ErrorBarProps.onDurationChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onDurationChangeCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDurationChangeCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onEmptied
    uid: '@azure/communication-react.ErrorBarProps.onEmptied'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEmptied
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onEmptied?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onEmptiedCapture
    uid: '@azure/communication-react.ErrorBarProps.onEmptiedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEmptiedCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onEmptiedCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onEncrypted
    uid: '@azure/communication-react.ErrorBarProps.onEncrypted'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEncrypted
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onEncrypted?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onEncryptedCapture
    uid: '@azure/communication-react.ErrorBarProps.onEncryptedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEncryptedCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onEncryptedCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onEnded
    uid: '@azure/communication-react.ErrorBarProps.onEnded'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEnded
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onEnded?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onEndedCapture
    uid: '@azure/communication-react.ErrorBarProps.onEndedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onEndedCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onEndedCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onError
    uid: '@azure/communication-react.ErrorBarProps.onError'
    package: '@azure/communication-react'
    summary: ''
    fullName: onError
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onError?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onErrorCapture
    uid: '@azure/communication-react.ErrorBarProps.onErrorCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onErrorCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onErrorCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onFocus
    uid: '@azure/communication-react.ErrorBarProps.onFocus'
    package: '@azure/communication-react'
    summary: ''
    fullName: onFocus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onFocus?: FocusEventHandler<HTMLElement> | undefined'
      return:
        type: FocusEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onFocusCapture
    uid: '@azure/communication-react.ErrorBarProps.onFocusCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onFocusCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onFocusCapture?: FocusEventHandler<HTMLElement> | undefined'
      return:
        type: FocusEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onGotPointerCapture
    uid: '@azure/communication-react.ErrorBarProps.onGotPointerCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onGotPointerCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onGotPointerCapture?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onGotPointerCaptureCapture
    uid: '@azure/communication-react.ErrorBarProps.onGotPointerCaptureCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onGotPointerCaptureCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onGotPointerCaptureCapture?: PointerEventHandler<HTMLElement> |
        undefined
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onInput
    uid: '@azure/communication-react.ErrorBarProps.onInput'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInput
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onInput?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onInputCapture
    uid: '@azure/communication-react.ErrorBarProps.onInputCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInputCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onInputCapture?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onInvalid
    uid: '@azure/communication-react.ErrorBarProps.onInvalid'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInvalid
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onInvalid?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onInvalidCapture
    uid: '@azure/communication-react.ErrorBarProps.onInvalidCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onInvalidCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onInvalidCapture?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onKeyDown
    uid: '@azure/communication-react.ErrorBarProps.onKeyDown'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyDown
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onKeyDown?: KeyboardEventHandler<HTMLElement> | undefined'
      return:
        type: KeyboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onKeyDownCapture
    uid: '@azure/communication-react.ErrorBarProps.onKeyDownCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyDownCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onKeyDownCapture?: KeyboardEventHandler<HTMLElement> | undefined'
      return:
        type: KeyboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onKeyPress
    uid: '@azure/communication-react.ErrorBarProps.onKeyPress'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyPress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onKeyPress?: KeyboardEventHandler<HTMLElement> | undefined'
      return:
        type: KeyboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onKeyPressCapture
    uid: '@azure/communication-react.ErrorBarProps.onKeyPressCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyPressCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onKeyPressCapture?: KeyboardEventHandler<HTMLElement> | undefined'
      return:
        type: KeyboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onKeyUp
    uid: '@azure/communication-react.ErrorBarProps.onKeyUp'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyUp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onKeyUp?: KeyboardEventHandler<HTMLElement> | undefined'
      return:
        type: KeyboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onKeyUpCapture
    uid: '@azure/communication-react.ErrorBarProps.onKeyUpCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onKeyUpCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onKeyUpCapture?: KeyboardEventHandler<HTMLElement> | undefined'
      return:
        type: KeyboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onLoad
    uid: '@azure/communication-react.ErrorBarProps.onLoad'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoad
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onLoad?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onLoadCapture
    uid: '@azure/communication-react.ErrorBarProps.onLoadCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onLoadCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onLoadedData
    uid: '@azure/communication-react.ErrorBarProps.onLoadedData'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedData
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onLoadedData?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onLoadedDataCapture
    uid: '@azure/communication-react.ErrorBarProps.onLoadedDataCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedDataCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onLoadedDataCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onLoadedMetadata
    uid: '@azure/communication-react.ErrorBarProps.onLoadedMetadata'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedMetadata
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onLoadedMetadata?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onLoadedMetadataCapture
    uid: '@azure/communication-react.ErrorBarProps.onLoadedMetadataCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadedMetadataCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onLoadedMetadataCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onLoadStart
    uid: '@azure/communication-react.ErrorBarProps.onLoadStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onLoadStart?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onLoadStartCapture
    uid: '@azure/communication-react.ErrorBarProps.onLoadStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLoadStartCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onLoadStartCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onLostPointerCapture
    uid: '@azure/communication-react.ErrorBarProps.onLostPointerCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLostPointerCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onLostPointerCapture?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onLostPointerCaptureCapture
    uid: '@azure/communication-react.ErrorBarProps.onLostPointerCaptureCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onLostPointerCaptureCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onLostPointerCaptureCapture?: PointerEventHandler<HTMLElement> |
        undefined
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseDown
    uid: '@azure/communication-react.ErrorBarProps.onMouseDown'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseDown
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseDown?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseDownCapture
    uid: '@azure/communication-react.ErrorBarProps.onMouseDownCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseDownCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseDownCapture?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseEnter
    uid: '@azure/communication-react.ErrorBarProps.onMouseEnter'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseEnter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseEnter?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseLeave
    uid: '@azure/communication-react.ErrorBarProps.onMouseLeave'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseLeave
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseLeave?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseMove
    uid: '@azure/communication-react.ErrorBarProps.onMouseMove'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseMove
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseMove?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseMoveCapture
    uid: '@azure/communication-react.ErrorBarProps.onMouseMoveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseMoveCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseMoveCapture?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseOut
    uid: '@azure/communication-react.ErrorBarProps.onMouseOut'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOut
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseOut?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseOutCapture
    uid: '@azure/communication-react.ErrorBarProps.onMouseOutCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOutCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseOutCapture?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseOver
    uid: '@azure/communication-react.ErrorBarProps.onMouseOver'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOver
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseOver?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseOverCapture
    uid: '@azure/communication-react.ErrorBarProps.onMouseOverCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseOverCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseOverCapture?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseUp
    uid: '@azure/communication-react.ErrorBarProps.onMouseUp'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseUp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseUp?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onMouseUpCapture
    uid: '@azure/communication-react.ErrorBarProps.onMouseUpCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onMouseUpCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onMouseUpCapture?: MouseEventHandler<HTMLElement> | undefined'
      return:
        type: MouseEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPaste
    uid: '@azure/communication-react.ErrorBarProps.onPaste'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPaste
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPaste?: ClipboardEventHandler<HTMLElement> | undefined'
      return:
        type: ClipboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPasteCapture
    uid: '@azure/communication-react.ErrorBarProps.onPasteCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPasteCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPasteCapture?: ClipboardEventHandler<HTMLElement> | undefined'
      return:
        type: ClipboardEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPause
    uid: '@azure/communication-react.ErrorBarProps.onPause'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPause
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPause?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPauseCapture
    uid: '@azure/communication-react.ErrorBarProps.onPauseCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPauseCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPauseCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPlay
    uid: '@azure/communication-react.ErrorBarProps.onPlay'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlay
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPlay?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPlayCapture
    uid: '@azure/communication-react.ErrorBarProps.onPlayCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlayCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPlayCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPlaying
    uid: '@azure/communication-react.ErrorBarProps.onPlaying'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlaying
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPlaying?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPlayingCapture
    uid: '@azure/communication-react.ErrorBarProps.onPlayingCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPlayingCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPlayingCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerCancel
    uid: '@azure/communication-react.ErrorBarProps.onPointerCancel'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerCancel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerCancel?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerCancelCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerCancelCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerCancelCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerCancelCapture?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerDown
    uid: '@azure/communication-react.ErrorBarProps.onPointerDown'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerDown
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerDown?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerDownCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerDownCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerDownCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerDownCapture?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerEnter
    uid: '@azure/communication-react.ErrorBarProps.onPointerEnter'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerEnter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerEnter?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerEnterCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerEnterCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerEnterCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerEnterCapture?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerLeave
    uid: '@azure/communication-react.ErrorBarProps.onPointerLeave'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerLeave
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerLeave?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerLeaveCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerLeaveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerLeaveCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerLeaveCapture?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerMove
    uid: '@azure/communication-react.ErrorBarProps.onPointerMove'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerMove
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerMove?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerMoveCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerMoveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerMoveCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerMoveCapture?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerOut
    uid: '@azure/communication-react.ErrorBarProps.onPointerOut'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOut
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerOut?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerOutCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerOutCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOutCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerOutCapture?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerOver
    uid: '@azure/communication-react.ErrorBarProps.onPointerOver'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOver
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerOver?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerOverCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerOverCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerOverCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerOverCapture?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerUp
    uid: '@azure/communication-react.ErrorBarProps.onPointerUp'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerUp
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerUp?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onPointerUpCapture
    uid: '@azure/communication-react.ErrorBarProps.onPointerUpCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onPointerUpCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onPointerUpCapture?: PointerEventHandler<HTMLElement> | undefined'
      return:
        type: PointerEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onProgress
    uid: '@azure/communication-react.ErrorBarProps.onProgress'
    package: '@azure/communication-react'
    summary: ''
    fullName: onProgress
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onProgress?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onProgressCapture
    uid: '@azure/communication-react.ErrorBarProps.onProgressCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onProgressCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onProgressCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onRateChange
    uid: '@azure/communication-react.ErrorBarProps.onRateChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onRateChange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRateChange?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onRateChangeCapture
    uid: '@azure/communication-react.ErrorBarProps.onRateChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onRateChangeCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRateChangeCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onReset
    uid: '@azure/communication-react.ErrorBarProps.onReset'
    package: '@azure/communication-react'
    summary: ''
    fullName: onReset
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onReset?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onResetCapture
    uid: '@azure/communication-react.ErrorBarProps.onResetCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onResetCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onResetCapture?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onScroll
    uid: '@azure/communication-react.ErrorBarProps.onScroll'
    package: '@azure/communication-react'
    summary: ''
    fullName: onScroll
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onScroll?: UIEventHandler<HTMLElement> | undefined'
      return:
        type: UIEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onScrollCapture
    uid: '@azure/communication-react.ErrorBarProps.onScrollCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onScrollCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onScrollCapture?: UIEventHandler<HTMLElement> | undefined'
      return:
        type: UIEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onSeeked
    uid: '@azure/communication-react.ErrorBarProps.onSeeked'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeeked
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSeeked?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onSeekedCapture
    uid: '@azure/communication-react.ErrorBarProps.onSeekedCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeekedCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSeekedCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onSeeking
    uid: '@azure/communication-react.ErrorBarProps.onSeeking'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeeking
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSeeking?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onSeekingCapture
    uid: '@azure/communication-react.ErrorBarProps.onSeekingCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSeekingCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSeekingCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onSelect
    uid: '@azure/communication-react.ErrorBarProps.onSelect'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSelect
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSelect?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onSelectCapture
    uid: '@azure/communication-react.ErrorBarProps.onSelectCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSelectCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSelectCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onStalled
    uid: '@azure/communication-react.ErrorBarProps.onStalled'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStalled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onStalled?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onStalledCapture
    uid: '@azure/communication-react.ErrorBarProps.onStalledCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onStalledCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onStalledCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onSubmit
    uid: '@azure/communication-react.ErrorBarProps.onSubmit'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSubmit
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSubmit?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onSubmitCapture
    uid: '@azure/communication-react.ErrorBarProps.onSubmitCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSubmitCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSubmitCapture?: FormEventHandler<HTMLElement> | undefined'
      return:
        type: FormEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onSuspend
    uid: '@azure/communication-react.ErrorBarProps.onSuspend'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSuspend
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSuspend?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onSuspendCapture
    uid: '@azure/communication-react.ErrorBarProps.onSuspendCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onSuspendCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSuspendCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTimeUpdate
    uid: '@azure/communication-react.ErrorBarProps.onTimeUpdate'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTimeUpdate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTimeUpdate?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTimeUpdateCapture
    uid: '@azure/communication-react.ErrorBarProps.onTimeUpdateCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTimeUpdateCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTimeUpdateCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTouchCancel
    uid: '@azure/communication-react.ErrorBarProps.onTouchCancel'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchCancel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTouchCancel?: TouchEventHandler<HTMLElement> | undefined'
      return:
        type: TouchEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTouchCancelCapture
    uid: '@azure/communication-react.ErrorBarProps.onTouchCancelCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchCancelCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTouchCancelCapture?: TouchEventHandler<HTMLElement> | undefined'
      return:
        type: TouchEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTouchEnd
    uid: '@azure/communication-react.ErrorBarProps.onTouchEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTouchEnd?: TouchEventHandler<HTMLElement> | undefined'
      return:
        type: TouchEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTouchEndCapture
    uid: '@azure/communication-react.ErrorBarProps.onTouchEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchEndCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTouchEndCapture?: TouchEventHandler<HTMLElement> | undefined'
      return:
        type: TouchEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTouchMove
    uid: '@azure/communication-react.ErrorBarProps.onTouchMove'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchMove
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTouchMove?: TouchEventHandler<HTMLElement> | undefined'
      return:
        type: TouchEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTouchMoveCapture
    uid: '@azure/communication-react.ErrorBarProps.onTouchMoveCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchMoveCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTouchMoveCapture?: TouchEventHandler<HTMLElement> | undefined'
      return:
        type: TouchEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTouchStart
    uid: '@azure/communication-react.ErrorBarProps.onTouchStart'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchStart
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTouchStart?: TouchEventHandler<HTMLElement> | undefined'
      return:
        type: TouchEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTouchStartCapture
    uid: '@azure/communication-react.ErrorBarProps.onTouchStartCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTouchStartCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTouchStartCapture?: TouchEventHandler<HTMLElement> | undefined'
      return:
        type: TouchEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTransitionEnd
    uid: '@azure/communication-react.ErrorBarProps.onTransitionEnd'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTransitionEnd
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTransitionEnd?: TransitionEventHandler<HTMLElement> | undefined'
      return:
        type: TransitionEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onTransitionEndCapture
    uid: '@azure/communication-react.ErrorBarProps.onTransitionEndCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onTransitionEndCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTransitionEndCapture?: TransitionEventHandler<HTMLElement> | undefined'
      return:
        type: TransitionEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onVolumeChange
    uid: '@azure/communication-react.ErrorBarProps.onVolumeChange'
    package: '@azure/communication-react'
    summary: ''
    fullName: onVolumeChange
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onVolumeChange?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onVolumeChangeCapture
    uid: '@azure/communication-react.ErrorBarProps.onVolumeChangeCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onVolumeChangeCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onVolumeChangeCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onWaiting
    uid: '@azure/communication-react.ErrorBarProps.onWaiting'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWaiting
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onWaiting?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onWaitingCapture
    uid: '@azure/communication-react.ErrorBarProps.onWaitingCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWaitingCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onWaitingCapture?: ReactEventHandler<HTMLElement> | undefined'
      return:
        type: ReactEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onWheel
    uid: '@azure/communication-react.ErrorBarProps.onWheel'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWheel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onWheel?: WheelEventHandler<HTMLElement> | undefined'
      return:
        type: WheelEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: onWheelCapture
    uid: '@azure/communication-react.ErrorBarProps.onWheelCapture'
    package: '@azure/communication-react'
    summary: ''
    fullName: onWheelCapture
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onWheelCapture?: WheelEventHandler<HTMLElement> | undefined'
      return:
        type: WheelEventHandler&lt;HTMLElement&gt; | undefined
        description: ''
  - name: overflowButtonAriaLabel
    uid: '@azure/communication-react.ErrorBarProps.overflowButtonAriaLabel'
    package: '@azure/communication-react'
    summary: Aria label on overflow button if truncated is defined.
    fullName: overflowButtonAriaLabel
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'overflowButtonAriaLabel?: string'
      return:
        type: string
        description: ''
  - name: placeholder
    uid: '@azure/communication-react.ErrorBarProps.placeholder'
    package: '@azure/communication-react'
    summary: ''
    fullName: placeholder
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'placeholder?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: prefix
    uid: '@azure/communication-react.ErrorBarProps.prefix'
    package: '@azure/communication-react'
    summary: ''
    fullName: prefix
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'prefix?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: property
    uid: '@azure/communication-react.ErrorBarProps.property'
    package: '@azure/communication-react'
    summary: ''
    fullName: property
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'property?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: radioGroup
    uid: '@azure/communication-react.ErrorBarProps.radioGroup'
    package: '@azure/communication-react'
    summary: ''
    fullName: radioGroup
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'radioGroup?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: ref
    uid: '@azure/communication-react.ErrorBarProps.ref'
    package: '@azure/communication-react'
    summary: ''
    fullName: ref
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'ref?: Ref<HTMLDivElement> | undefined'
      return:
        type: Ref&lt;HTMLDivElement&gt; | undefined
        description: ''
  - name: resource
    uid: '@azure/communication-react.ErrorBarProps.resource'
    package: '@azure/communication-react'
    summary: ''
    fullName: resource
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'resource?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: results
    uid: '@azure/communication-react.ErrorBarProps.results'
    package: '@azure/communication-react'
    summary: ''
    fullName: results
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'results?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: role
    uid: '@azure/communication-react.ErrorBarProps.role'
    package: '@azure/communication-react'
    summary: Custom role to apply to the MessageBar.
    fullName: role
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'role?: "alert" | "status" | "none"'
      return:
        type: '"alert" | "status" | "none"'
        description: ''
  - name: security
    uid: '@azure/communication-react.ErrorBarProps.security'
    package: '@azure/communication-react'
    summary: ''
    fullName: security
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'security?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: slot
    uid: '@azure/communication-react.ErrorBarProps.slot'
    package: '@azure/communication-react'
    summary: ''
    fullName: slot
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'slot?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: spellCheck
    uid: '@azure/communication-react.ErrorBarProps.spellCheck'
    package: '@azure/communication-react'
    summary: ''
    fullName: spellCheck
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'spellCheck?: Booleanish | undefined'
      return:
        type: Booleanish | undefined
        description: ''
  - name: strings
    uid: '@azure/communication-react.ErrorBarProps.strings'
    package: '@azure/communication-react'
    summary: Strings shown on the UI on errors.
    fullName: strings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strings?: ErrorBarStrings'
      return:
        type: <xref uid="@azure/communication-react.ErrorBarStrings" />
        description: ''
  - name: style
    uid: '@azure/communication-react.ErrorBarProps.style'
    package: '@azure/communication-react'
    summary: ''
    fullName: style
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'style?: CSSProperties | undefined'
      return:
        type: CSSProperties | undefined
        description: ''
  - name: styles
    uid: '@azure/communication-react.ErrorBarProps.styles'
    package: '@azure/communication-react'
    summary: >-
      Call to provide customized styling that will layer on top of the variant
      rules.
    fullName: styles
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        styles?: IStyleFunctionOrObject<IMessageBarStyleProps,
        IMessageBarStyles>
      return:
        type: 'IStyleFunctionOrObject&lt;IMessageBarStyleProps, IMessageBarStyles&gt;'
        description: ''
  - name: suppressContentEditableWarning
    uid: '@azure/communication-react.ErrorBarProps.suppressContentEditableWarning'
    package: '@azure/communication-react'
    summary: ''
    fullName: suppressContentEditableWarning
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'suppressContentEditableWarning?: boolean | undefined'
      return:
        type: boolean | undefined
        description: ''
  - name: suppressHydrationWarning
    uid: '@azure/communication-react.ErrorBarProps.suppressHydrationWarning'
    package: '@azure/communication-react'
    summary: ''
    fullName: suppressHydrationWarning
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'suppressHydrationWarning?: boolean | undefined'
      return:
        type: boolean | undefined
        description: ''
  - name: tabIndex
    uid: '@azure/communication-react.ErrorBarProps.tabIndex'
    package: '@azure/communication-react'
    summary: ''
    fullName: tabIndex
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tabIndex?: number | undefined'
      return:
        type: number | undefined
        description: ''
  - name: theme
    uid: '@azure/communication-react.ErrorBarProps.theme'
    package: '@azure/communication-react'
    summary: Theme (provided through customization.)
    fullName: theme
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'theme?: ITheme'
      return:
        type: ITheme
        description: ''
  - name: title
    uid: '@azure/communication-react.ErrorBarProps.title'
    package: '@azure/communication-react'
    summary: ''
    fullName: title
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'title?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: translate
    uid: '@azure/communication-react.ErrorBarProps.translate'
    package: '@azure/communication-react'
    summary: ''
    fullName: translate
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'translate?: "yes" | "no" | undefined'
      return:
        type: '"yes" | "no" | undefined'
        description: ''
  - name: truncated
    uid: '@azure/communication-react.ErrorBarProps.truncated'
    package: '@azure/communication-react'
    summary: >-
      Determines if the message bar text is truncated.

      If true, a button will render to toggle between a single line view and
      multiline view.

      This prop is for single line message bars with no buttons only in a
      limited space scenario.
    fullName: truncated
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'truncated?: boolean'
      return:
        type: boolean
        description: ''
  - name: typeof
    uid: '@azure/communication-react.ErrorBarProps.typeof'
    package: '@azure/communication-react'
    summary: ''
    fullName: typeof
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'typeof?: string | undefined'
      return:
        type: string | undefined
        description: ''
  - name: unselectable
    uid: '@azure/communication-react.ErrorBarProps.unselectable'
    package: '@azure/communication-react'
    summary: ''
    fullName: unselectable
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'unselectable?: "on" | "off" | undefined'
      return:
        type: '"on" | "off" | undefined'
        description: ''
  - name: vocab
    uid: '@azure/communication-react.ErrorBarProps.vocab'
    package: '@azure/communication-react'
    summary: ''
    fullName: vocab
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'vocab?: string | undefined'
      return:
        type: string | undefined
        description: ''
extends: IMessageBarProps
