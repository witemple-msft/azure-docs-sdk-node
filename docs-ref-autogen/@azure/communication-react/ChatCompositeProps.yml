### YamlMime:TSType
name: ChatCompositeProps
uid: '@azure/communication-react.ChatCompositeProps'
package: '@azure/communication-react'
summary: ''
fullName: ChatCompositeProps
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: adapter
    uid: '@azure/communication-react.ChatCompositeProps.adapter'
    package: '@azure/communication-react'
    summary: |-
      An adapter provides logic and data to the composite.
      Composite can also be controlled using the adapter.
    fullName: adapter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'adapter: ChatAdapter'
      return:
        type: <xref uid="@azure/communication-react.ChatAdapter" />
        description: ''
  - name: fluentTheme
    uid: '@azure/communication-react.ChatCompositeProps.fluentTheme'
    package: '@azure/communication-react'
    summary: Fluent theme for the composite.
    fullName: fluentTheme
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'fluentTheme?: PartialTheme | Theme'
      return:
        type: PartialTheme | Theme
        description: ''
  - name: icons
    uid: '@azure/communication-react.ChatCompositeProps.icons'
    package: '@azure/communication-react'
    summary: |-
      Custom Icon override for the composite.
      A JSX element can be provided to override the default icon.
    fullName: icons
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'icons?: ChatCompositeIcons'
      return:
        type: <xref uid="@azure/communication-react.ChatCompositeIcons" />
        description: ''
  - name: locale
    uid: '@azure/communication-react.ChatCompositeProps.locale'
    package: '@azure/communication-react'
    summary: Locale for the composite.
    fullName: locale
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'locale?: CompositeLocale'
      return:
        type: <xref uid="@azure/communication-react.CompositeLocale" />
        description: ''
  - name: onFetchAvatarPersonaData
    uid: '@azure/communication-react.ChatCompositeProps.onFetchAvatarPersonaData'
    package: '@azure/communication-react'
    summary: >-
      A callback function that can be used to provide custom data to Avatars
      rendered

      in Composite.
    fullName: onFetchAvatarPersonaData
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onFetchAvatarPersonaData?: AvatarPersonaDataCallback'
      return:
        type: <xref uid="@azure/communication-react.AvatarPersonaDataCallback" />
        description: ''
  - name: onRenderMessage
    uid: '@azure/communication-react.ChatCompositeProps.onRenderMessage'
    package: '@azure/communication-react'
    summary: >-
      `(messageProps: MessageProps, defaultOnRender?:
      DefaultMessageRendererType) => JSX.Element`

      A callback for customizing the message renderer.
    fullName: onRenderMessage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRenderMessage?: (messageProps: MessageProps, defaultOnRender?:
        DefaultMessageRendererType) => Element
      return:
        type: >-
          (messageProps: MessageProps, defaultOnRender?:
          DefaultMessageRendererType) =&gt; Element
        description: ''
  - name: onRenderTypingIndicator
    uid: '@azure/communication-react.ChatCompositeProps.onRenderTypingIndicator'
    package: '@azure/communication-react'
    summary: |-
      `(typingUsers: CommunicationParticipant[]) => JSX.Element`
      A callback for customizing the typing indicator renderer.
    fullName: onRenderTypingIndicator
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRenderTypingIndicator?: (typingUsers: CommunicationParticipant[]) =>
        Element
      return:
        type: '(typingUsers: CommunicationParticipant[]) =&gt; Element'
        description: ''
  - name: rtl
    uid: '@azure/communication-react.ChatCompositeProps.rtl'
    package: '@azure/communication-react'
    summary: Whether composite is displayed right-to-left.
    fullName: rtl
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'rtl?: boolean'
      return:
        type: boolean
        description: ''
  - name: visualElements
    uid: '@azure/communication-react.ChatCompositeProps.visualElements'
    package: '@azure/communication-react'
    summary: 'Flags to enable/disable visual elements of the <xref:ChatComposite>.'
    fullName: visualElements
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'visualElements?: ChatCompositeVisualElements'
      return:
        type: <xref uid="@azure/communication-react.ChatCompositeVisualElements" />
        description: ''
extends: >-
  <xref uid="@azure/communication-react.BaseCompositeProps" />&lt;<xref
  uid="@azure/communication-react.ChatCompositeIcons" />&gt;
