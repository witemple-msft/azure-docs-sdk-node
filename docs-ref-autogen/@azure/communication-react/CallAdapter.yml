### YamlMime:TSType
name: CallAdapter
uid: '@azure/communication-react.CallAdapter'
package: '@azure/communication-react'
summary: Call Composite Adapter interface.
fullName: CallAdapter
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: askDevicePermission(PermissionConstraints)
    uid: '@azure/communication-react.CallAdapter.askDevicePermission'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function askDevicePermission(constrain: PermissionConstraints)'
      parameters:
        - id: constrain
          type: PermissionConstraints
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'createStreamView(string, VideoStreamOptions)'
    uid: '@azure/communication-react.CallAdapter.createStreamView'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createStreamView(remoteUserId?: string, options?:
        VideoStreamOptions)
      parameters:
        - id: remoteUserId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'disposeStreamView(string, VideoStreamOptions)'
    uid: '@azure/communication-react.CallAdapter.disposeStreamView'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disposeStreamView(remoteUserId?: string, options?:
        VideoStreamOptions)
      parameters:
        - id: remoteUserId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: joinCall(boolean)
    uid: '@azure/communication-react.CallAdapter.joinCall'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function joinCall(microphoneOn?: boolean)'
      parameters:
        - id: microphoneOn
          type: boolean
          description: ''
      return:
        type: Call | undefined
        description: ''
  - name: leaveCall(boolean)
    uid: '@azure/communication-react.CallAdapter.leaveCall'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function leaveCall(forEveryone?: boolean)'
      parameters:
        - id: forEveryone
          type: boolean
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: mute()
    uid: '@azure/communication-react.CallAdapter.mute'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function mute()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'off("callEnded", CallEndedListener)'
    uid: '@azure/communication-react.CallAdapter.off_7'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "callEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"callEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
  - name: 'off("callIdChanged", CallIdChangedListener)'
    uid: '@azure/communication-react.CallAdapter.off_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
  - name: 'off("displayNameChanged", DisplayNameChangedListener)'
    uid: '@azure/communication-react.CallAdapter.off_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
  - name: 'off("error", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CallAdapter.off_8'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "error", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
  - name: 'off("isLocalScreenSharingActiveChanged", IsScreenSharingOnChangedListener)'
    uid: '@azure/communication-react.CallAdapter.off_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isLocalScreenSharingActiveChanged", listener:
        IsScreenSharingOnChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsScreenSharingOnChangedListener" />
          description: ''
  - name: 'off("isMutedChanged", IsMuteChangedListener)'
    uid: '@azure/communication-react.CallAdapter.off_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function off(event: "isMutedChanged", listener: IsMuteChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMuteChangedListener" />
          description: ''
  - name: 'off("isSpeakingChanged", IsSpeakingChangedListener)'
    uid: '@azure/communication-react.CallAdapter.off_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
  - name: 'off("participantsJoined", ParticipantJoinedListener)'
    uid: '@azure/communication-react.CallAdapter.off'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsJoined", listener:
        ParticipantJoinedListener)
      parameters:
        - id: event
          type: '"participantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantJoinedListener" />
          description: ''
  - name: 'off("participantsLeft", ParticipantLeftListener)'
    uid: '@azure/communication-react.CallAdapter.off_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "participantsLeft", listener:
        ParticipantLeftListener)
      parameters:
        - id: event
          type: '"participantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantLeftListener" />
          description: ''
  - name: 'on("callEnded", CallEndedListener)'
    uid: '@azure/communication-react.CallAdapter.on_7'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "callEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"callEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
  - name: 'on("callIdChanged", CallIdChangedListener)'
    uid: '@azure/communication-react.CallAdapter.on_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
  - name: 'on("displayNameChanged", DisplayNameChangedListener)'
    uid: '@azure/communication-react.CallAdapter.on_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
  - name: 'on("error", (e: AdapterError) => void)'
    uid: '@azure/communication-react.CallAdapter.on_8'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "error", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"error"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
  - name: 'on("isLocalScreenSharingActiveChanged", IsScreenSharingOnChangedListener)'
    uid: '@azure/communication-react.CallAdapter.on_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isLocalScreenSharingActiveChanged", listener:
        IsScreenSharingOnChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsScreenSharingOnChangedListener" />
          description: ''
  - name: 'on("isMutedChanged", IsMuteChangedListener)'
    uid: '@azure/communication-react.CallAdapter.on_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function on(event: "isMutedChanged", listener: IsMuteChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMuteChangedListener" />
          description: ''
  - name: 'on("isSpeakingChanged", IsSpeakingChangedListener)'
    uid: '@azure/communication-react.CallAdapter.on_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
  - name: 'on("participantsJoined", ParticipantJoinedListener)'
    uid: '@azure/communication-react.CallAdapter.on'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsJoined", listener:
        ParticipantJoinedListener)
      parameters:
        - id: event
          type: '"participantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantJoinedListener" />
          description: ''
  - name: 'on("participantsLeft", ParticipantLeftListener)'
    uid: '@azure/communication-react.CallAdapter.on_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "participantsLeft", listener:
        ParticipantLeftListener)
      parameters:
        - id: event
          type: '"participantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantLeftListener" />
          description: ''
  - name: onToggleCamera(VideoStreamOptions)
    uid: '@azure/communication-react.CallAdapter.onToggleCamera'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function onToggleCamera(options?: VideoStreamOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: queryCameras()
    uid: '@azure/communication-react.CallAdapter.queryCameras'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function queryCameras()
      return:
        type: 'Promise&lt;VideoDeviceInfo[]&gt;'
        description: ''
  - name: queryMicrophones()
    uid: '@azure/communication-react.CallAdapter.queryMicrophones'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function queryMicrophones()
      return:
        type: 'Promise&lt;AudioDeviceInfo[]&gt;'
        description: ''
  - name: querySpeakers()
    uid: '@azure/communication-react.CallAdapter.querySpeakers'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function querySpeakers()
      return:
        type: 'Promise&lt;AudioDeviceInfo[]&gt;'
        description: ''
  - name: removeParticipant(string)
    uid: '@azure/communication-react.CallAdapter.removeParticipant'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function removeParticipant(userId: string)'
      parameters:
        - id: userId
          type: string
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'setCamera(VideoDeviceInfo, VideoStreamOptions)'
    uid: '@azure/communication-react.CallAdapter.setCamera'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setCamera(sourceId: VideoDeviceInfo, options?:
        VideoStreamOptions)
      parameters:
        - id: sourceId
          type: VideoDeviceInfo
          description: ''
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: setMicrophone(AudioDeviceInfo)
    uid: '@azure/communication-react.CallAdapter.setMicrophone'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMicrophone(sourceId: AudioDeviceInfo)'
      parameters:
        - id: sourceId
          type: AudioDeviceInfo
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: setSpeaker(AudioDeviceInfo)
    uid: '@azure/communication-react.CallAdapter.setSpeaker'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setSpeaker(sourceId: AudioDeviceInfo)'
      parameters:
        - id: sourceId
          type: AudioDeviceInfo
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'startCall(string[])'
    uid: '@azure/communication-react.CallAdapter.startCall'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function startCall(participants: string[])'
      parameters:
        - id: participants
          type: 'string[]'
          description: ''
      return:
        type: Call | undefined
        description: ''
  - name: startCamera()
    uid: '@azure/communication-react.CallAdapter.startCamera'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function startCamera()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: startScreenShare()
    uid: '@azure/communication-react.CallAdapter.startScreenShare'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function startScreenShare()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: stopCamera()
    uid: '@azure/communication-react.CallAdapter.stopCamera'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function stopCamera()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: stopScreenShare()
    uid: '@azure/communication-react.CallAdapter.stopScreenShare'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function stopScreenShare()
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: unmute()
    uid: '@azure/communication-react.CallAdapter.unmute'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function unmute()
      return:
        type: Promise&lt;void&gt;
        description: ''
extends: any
